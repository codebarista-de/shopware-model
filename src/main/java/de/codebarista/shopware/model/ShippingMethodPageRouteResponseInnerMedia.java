/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.time.OffsetDateTime;
import java.util.Objects;

/**
 * ShippingMethodPageRouteResponseInnerMedia
 */
@JsonPropertyOrder({
  ShippingMethodPageRouteResponseInnerMedia.JSON_PROPERTY_USER_ID,
  ShippingMethodPageRouteResponseInnerMedia.JSON_PROPERTY_MIME_TYPE,
  ShippingMethodPageRouteResponseInnerMedia.JSON_PROPERTY_FILE_EXTENSION,
  ShippingMethodPageRouteResponseInnerMedia.JSON_PROPERTY_FILE_SIZE,
  ShippingMethodPageRouteResponseInnerMedia.JSON_PROPERTY_TITLE,
  ShippingMethodPageRouteResponseInnerMedia.JSON_PROPERTY_META_DATA_RAW,
  ShippingMethodPageRouteResponseInnerMedia.JSON_PROPERTY_MEDIA_TYPE_RAW,
  ShippingMethodPageRouteResponseInnerMedia.JSON_PROPERTY_UPLOADED_AT,
  ShippingMethodPageRouteResponseInnerMedia.JSON_PROPERTY_ALT,
  ShippingMethodPageRouteResponseInnerMedia.JSON_PROPERTY_URL,
  ShippingMethodPageRouteResponseInnerMedia.JSON_PROPERTY_FILE_NAME,
  ShippingMethodPageRouteResponseInnerMedia.JSON_PROPERTY_MEDIA_FOLDER_ID,
  ShippingMethodPageRouteResponseInnerMedia.JSON_PROPERTY_PRIVATE,
  ShippingMethodPageRouteResponseInnerMedia.JSON_PROPERTY_THUMBNAILS_RO
})
@JsonTypeName("ShippingMethodPageRouteResponse_inner_media")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class ShippingMethodPageRouteResponseInnerMedia {
  public static final String JSON_PROPERTY_USER_ID = "userId";
  private String userId;

  public static final String JSON_PROPERTY_MIME_TYPE = "mimeType";
  private String mimeType;

  public static final String JSON_PROPERTY_FILE_EXTENSION = "fileExtension";
  private String fileExtension;

  public static final String JSON_PROPERTY_FILE_SIZE = "fileSize";
  private Integer fileSize;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_META_DATA_RAW = "metaDataRaw";
  private String metaDataRaw;

  public static final String JSON_PROPERTY_MEDIA_TYPE_RAW = "mediaTypeRaw";
  private String mediaTypeRaw;

  public static final String JSON_PROPERTY_UPLOADED_AT = "uploadedAt";
  private OffsetDateTime uploadedAt;

  public static final String JSON_PROPERTY_ALT = "alt";
  private String alt;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_FILE_NAME = "fileName";
  private String fileName;

  public static final String JSON_PROPERTY_MEDIA_FOLDER_ID = "mediaFolderId";
  private String mediaFolderId;

  public static final String JSON_PROPERTY_PRIVATE = "private";
  private Boolean _private;

  public static final String JSON_PROPERTY_THUMBNAILS_RO = "thumbnailsRo";
  private String thumbnailsRo;

  public ShippingMethodPageRouteResponseInnerMedia() {
  }

  public ShippingMethodPageRouteResponseInnerMedia userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(String userId) {
    this.userId = userId;
  }


  public ShippingMethodPageRouteResponseInnerMedia mimeType(String mimeType) {
    
    this.mimeType = mimeType;
    return this;
  }

   /**
   * Get mimeType
   * @return mimeType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMimeType() {
    return mimeType;
  }


  @JsonProperty(JSON_PROPERTY_MIME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }


  public ShippingMethodPageRouteResponseInnerMedia fileExtension(String fileExtension) {
    
    this.fileExtension = fileExtension;
    return this;
  }

   /**
   * Get fileExtension
   * @return fileExtension
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_EXTENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFileExtension() {
    return fileExtension;
  }


  @JsonProperty(JSON_PROPERTY_FILE_EXTENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileExtension(String fileExtension) {
    this.fileExtension = fileExtension;
  }


  public ShippingMethodPageRouteResponseInnerMedia fileSize(Integer fileSize) {
    
    this.fileSize = fileSize;
    return this;
  }

   /**
   * Get fileSize
   * @return fileSize
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFileSize() {
    return fileSize;
  }


  @JsonProperty(JSON_PROPERTY_FILE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileSize(Integer fileSize) {
    this.fileSize = fileSize;
  }


  public ShippingMethodPageRouteResponseInnerMedia title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTitle(String title) {
    this.title = title;
  }


  public ShippingMethodPageRouteResponseInnerMedia metaDataRaw(String metaDataRaw) {
    
    this.metaDataRaw = metaDataRaw;
    return this;
  }

   /**
   * Get metaDataRaw
   * @return metaDataRaw
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_META_DATA_RAW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMetaDataRaw() {
    return metaDataRaw;
  }


  @JsonProperty(JSON_PROPERTY_META_DATA_RAW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetaDataRaw(String metaDataRaw) {
    this.metaDataRaw = metaDataRaw;
  }


  public ShippingMethodPageRouteResponseInnerMedia mediaTypeRaw(String mediaTypeRaw) {
    
    this.mediaTypeRaw = mediaTypeRaw;
    return this;
  }

   /**
   * Get mediaTypeRaw
   * @return mediaTypeRaw
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEDIA_TYPE_RAW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMediaTypeRaw() {
    return mediaTypeRaw;
  }


  @JsonProperty(JSON_PROPERTY_MEDIA_TYPE_RAW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMediaTypeRaw(String mediaTypeRaw) {
    this.mediaTypeRaw = mediaTypeRaw;
  }


  public ShippingMethodPageRouteResponseInnerMedia uploadedAt(OffsetDateTime uploadedAt) {
    
    this.uploadedAt = uploadedAt;
    return this;
  }

   /**
   * Get uploadedAt
   * @return uploadedAt
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPLOADED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUploadedAt() {
    return uploadedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPLOADED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUploadedAt(OffsetDateTime uploadedAt) {
    this.uploadedAt = uploadedAt;
  }


  public ShippingMethodPageRouteResponseInnerMedia alt(String alt) {
    
    this.alt = alt;
    return this;
  }

   /**
   * Get alt
   * @return alt
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAlt() {
    return alt;
  }


  @JsonProperty(JSON_PROPERTY_ALT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlt(String alt) {
    this.alt = alt;
  }


  public ShippingMethodPageRouteResponseInnerMedia url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrl(String url) {
    this.url = url;
  }


  public ShippingMethodPageRouteResponseInnerMedia fileName(String fileName) {
    
    this.fileName = fileName;
    return this;
  }

   /**
   * Get fileName
   * @return fileName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFileName() {
    return fileName;
  }


  @JsonProperty(JSON_PROPERTY_FILE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFileName(String fileName) {
    this.fileName = fileName;
  }


  public ShippingMethodPageRouteResponseInnerMedia mediaFolderId(String mediaFolderId) {
    
    this.mediaFolderId = mediaFolderId;
    return this;
  }

   /**
   * Get mediaFolderId
   * @return mediaFolderId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEDIA_FOLDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMediaFolderId() {
    return mediaFolderId;
  }


  @JsonProperty(JSON_PROPERTY_MEDIA_FOLDER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMediaFolderId(String mediaFolderId) {
    this.mediaFolderId = mediaFolderId;
  }


  public ShippingMethodPageRouteResponseInnerMedia _private(Boolean _private) {
    
    this._private = _private;
    return this;
  }

   /**
   * Get _private
   * @return _private
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRIVATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPrivate() {
    return _private;
  }


  @JsonProperty(JSON_PROPERTY_PRIVATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrivate(Boolean _private) {
    this._private = _private;
  }


  public ShippingMethodPageRouteResponseInnerMedia thumbnailsRo(String thumbnailsRo) {
    
    this.thumbnailsRo = thumbnailsRo;
    return this;
  }

   /**
   * Get thumbnailsRo
   * @return thumbnailsRo
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_THUMBNAILS_RO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getThumbnailsRo() {
    return thumbnailsRo;
  }


  @JsonProperty(JSON_PROPERTY_THUMBNAILS_RO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThumbnailsRo(String thumbnailsRo) {
    this.thumbnailsRo = thumbnailsRo;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShippingMethodPageRouteResponseInnerMedia shippingMethodPageRouteResponseInnerMedia = (ShippingMethodPageRouteResponseInnerMedia) o;
    return Objects.equals(this.userId, shippingMethodPageRouteResponseInnerMedia.userId) &&
        Objects.equals(this.mimeType, shippingMethodPageRouteResponseInnerMedia.mimeType) &&
        Objects.equals(this.fileExtension, shippingMethodPageRouteResponseInnerMedia.fileExtension) &&
        Objects.equals(this.fileSize, shippingMethodPageRouteResponseInnerMedia.fileSize) &&
        Objects.equals(this.title, shippingMethodPageRouteResponseInnerMedia.title) &&
        Objects.equals(this.metaDataRaw, shippingMethodPageRouteResponseInnerMedia.metaDataRaw) &&
        Objects.equals(this.mediaTypeRaw, shippingMethodPageRouteResponseInnerMedia.mediaTypeRaw) &&
        Objects.equals(this.uploadedAt, shippingMethodPageRouteResponseInnerMedia.uploadedAt) &&
        Objects.equals(this.alt, shippingMethodPageRouteResponseInnerMedia.alt) &&
        Objects.equals(this.url, shippingMethodPageRouteResponseInnerMedia.url) &&
        Objects.equals(this.fileName, shippingMethodPageRouteResponseInnerMedia.fileName) &&
        Objects.equals(this.mediaFolderId, shippingMethodPageRouteResponseInnerMedia.mediaFolderId) &&
        Objects.equals(this._private, shippingMethodPageRouteResponseInnerMedia._private) &&
        Objects.equals(this.thumbnailsRo, shippingMethodPageRouteResponseInnerMedia.thumbnailsRo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, mimeType, fileExtension, fileSize, title, metaDataRaw, mediaTypeRaw, uploadedAt, alt, url, fileName, mediaFolderId, _private, thumbnailsRo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShippingMethodPageRouteResponseInnerMedia {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("    fileExtension: ").append(toIndentedString(fileExtension)).append("\n");
    sb.append("    fileSize: ").append(toIndentedString(fileSize)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    metaDataRaw: ").append(toIndentedString(metaDataRaw)).append("\n");
    sb.append("    mediaTypeRaw: ").append(toIndentedString(mediaTypeRaw)).append("\n");
    sb.append("    uploadedAt: ").append(toIndentedString(uploadedAt)).append("\n");
    sb.append("    alt: ").append(toIndentedString(alt)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    mediaFolderId: ").append(toIndentedString(mediaFolderId)).append("\n");
    sb.append("    _private: ").append(toIndentedString(_private)).append("\n");
    sb.append("    thumbnailsRo: ").append(toIndentedString(thumbnailsRo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

