/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model.core;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.Objects;

/**
 * Core context with general configuration values and state
 */
@JsonPropertyOrder({
  SalesChannelContextAllOfContext.JSON_PROPERTY_VERSION_ID,
  SalesChannelContextAllOfContext.JSON_PROPERTY_CURRENCY_ID,
  SalesChannelContextAllOfContext.JSON_PROPERTY_CURRENCY_FACTOR,
  SalesChannelContextAllOfContext.JSON_PROPERTY_CURRENCY_PRECISION,
  SalesChannelContextAllOfContext.JSON_PROPERTY_SCOPE,
  SalesChannelContextAllOfContext.JSON_PROPERTY_SOURCE,
  SalesChannelContextAllOfContext.JSON_PROPERTY_TAX_STATE,
  SalesChannelContextAllOfContext.JSON_PROPERTY_USE_CACHE
})
@JsonTypeName("SalesChannelContext_allOf_context")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class SalesChannelContextAllOfContext {
  public static final String JSON_PROPERTY_VERSION_ID = "versionId";
  private String versionId;

  public static final String JSON_PROPERTY_CURRENCY_ID = "currencyId";
  private String currencyId;

  public static final String JSON_PROPERTY_CURRENCY_FACTOR = "currencyFactor";
  private Integer currencyFactor;

  public static final String JSON_PROPERTY_CURRENCY_PRECISION = "currencyPrecision";
  private Integer currencyPrecision;

  public static final String JSON_PROPERTY_SCOPE = "scope";
  private String scope;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private String source;

  public static final String JSON_PROPERTY_TAX_STATE = "taxState";
  private String taxState;

  public static final String JSON_PROPERTY_USE_CACHE = "useCache";
  private Boolean useCache;

  public SalesChannelContextAllOfContext() {
  }

  public SalesChannelContextAllOfContext versionId(String versionId) {
    
    this.versionId = versionId;
    return this;
  }

   /**
   * Get versionId
   * @return versionId
  **/
  @JsonProperty(JSON_PROPERTY_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersionId() {
    return versionId;
  }


  @JsonProperty(JSON_PROPERTY_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersionId(String versionId) {
    this.versionId = versionId;
  }


  public SalesChannelContextAllOfContext currencyId(String currencyId) {
    
    this.currencyId = currencyId;
    return this;
  }

   /**
   * Get currencyId
   * @return currencyId
  **/
  @JsonProperty(JSON_PROPERTY_CURRENCY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCurrencyId() {
    return currencyId;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrencyId(String currencyId) {
    this.currencyId = currencyId;
  }


  public SalesChannelContextAllOfContext currencyFactor(Integer currencyFactor) {
    
    this.currencyFactor = currencyFactor;
    return this;
  }

   /**
   * Get currencyFactor
   * @return currencyFactor
  **/
  @JsonProperty(JSON_PROPERTY_CURRENCY_FACTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCurrencyFactor() {
    return currencyFactor;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY_FACTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrencyFactor(Integer currencyFactor) {
    this.currencyFactor = currencyFactor;
  }


  public SalesChannelContextAllOfContext currencyPrecision(Integer currencyPrecision) {
    
    this.currencyPrecision = currencyPrecision;
    return this;
  }

   /**
   * Get currencyPrecision
   * @return currencyPrecision
  **/
  @JsonProperty(JSON_PROPERTY_CURRENCY_PRECISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCurrencyPrecision() {
    return currencyPrecision;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY_PRECISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCurrencyPrecision(Integer currencyPrecision) {
    this.currencyPrecision = currencyPrecision;
  }


  public SalesChannelContextAllOfContext scope(String scope) {
    
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @JsonProperty(JSON_PROPERTY_SCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getScope() {
    return scope;
  }


  @JsonProperty(JSON_PROPERTY_SCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScope(String scope) {
    this.scope = scope;
  }


  public SalesChannelContextAllOfContext source(String source) {
    
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(String source) {
    this.source = source;
  }


  public SalesChannelContextAllOfContext taxState(String taxState) {
    
    this.taxState = taxState;
    return this;
  }

   /**
   * Get taxState
   * @return taxState
  **/
  @JsonProperty(JSON_PROPERTY_TAX_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaxState() {
    return taxState;
  }


  @JsonProperty(JSON_PROPERTY_TAX_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxState(String taxState) {
    this.taxState = taxState;
  }


  public SalesChannelContextAllOfContext useCache(Boolean useCache) {
    
    this.useCache = useCache;
    return this;
  }

   /**
   * Get useCache
   * @return useCache
  **/
  @JsonProperty(JSON_PROPERTY_USE_CACHE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUseCache() {
    return useCache;
  }


  @JsonProperty(JSON_PROPERTY_USE_CACHE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUseCache(Boolean useCache) {
    this.useCache = useCache;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesChannelContextAllOfContext salesChannelContextAllOfContext = (SalesChannelContextAllOfContext) o;
    return Objects.equals(this.versionId, salesChannelContextAllOfContext.versionId) &&
        Objects.equals(this.currencyId, salesChannelContextAllOfContext.currencyId) &&
        Objects.equals(this.currencyFactor, salesChannelContextAllOfContext.currencyFactor) &&
        Objects.equals(this.currencyPrecision, salesChannelContextAllOfContext.currencyPrecision) &&
        Objects.equals(this.scope, salesChannelContextAllOfContext.scope) &&
        Objects.equals(this.source, salesChannelContextAllOfContext.source) &&
        Objects.equals(this.taxState, salesChannelContextAllOfContext.taxState) &&
        Objects.equals(this.useCache, salesChannelContextAllOfContext.useCache);
  }

  @Override
  public int hashCode() {
    return Objects.hash(versionId, currencyId, currencyFactor, currencyPrecision, scope, source, taxState, useCache);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesChannelContextAllOfContext {\n");
    sb.append("    versionId: ").append(toIndentedString(versionId)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    currencyFactor: ").append(toIndentedString(currencyFactor)).append("\n");
    sb.append("    currencyPrecision: ").append(toIndentedString(currencyPrecision)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    taxState: ").append(toIndentedString(taxState)).append("\n");
    sb.append("    useCache: ").append(toIndentedString(useCache)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
