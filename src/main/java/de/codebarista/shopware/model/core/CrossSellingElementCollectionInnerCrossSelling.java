/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model.core;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.Objects;

/**
 * CrossSellingElementCollectionInnerCrossSelling
 */
@JsonPropertyOrder({
  CrossSellingElementCollectionInnerCrossSelling.JSON_PROPERTY_NAME,
  CrossSellingElementCollectionInnerCrossSelling.JSON_PROPERTY_POSITION,
  CrossSellingElementCollectionInnerCrossSelling.JSON_PROPERTY_SORT_BY,
  CrossSellingElementCollectionInnerCrossSelling.JSON_PROPERTY_SORT_DIRECTION,
  CrossSellingElementCollectionInnerCrossSelling.JSON_PROPERTY_LIMIT,
  CrossSellingElementCollectionInnerCrossSelling.JSON_PROPERTY_ACTIVE,
  CrossSellingElementCollectionInnerCrossSelling.JSON_PROPERTY_PRODUCT_ID,
  CrossSellingElementCollectionInnerCrossSelling.JSON_PROPERTY_PRODUCT_STREAM_ID,
  CrossSellingElementCollectionInnerCrossSelling.JSON_PROPERTY_TYPE
})
@JsonTypeName("CrossSellingElementCollection_inner_crossSelling")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class CrossSellingElementCollectionInnerCrossSelling {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_POSITION = "position";
  private Integer position;

  public static final String JSON_PROPERTY_SORT_BY = "sortBy";
  private String sortBy;

  public static final String JSON_PROPERTY_SORT_DIRECTION = "sortDirection";
  private String sortDirection;

  public static final String JSON_PROPERTY_LIMIT = "limit";
  private Integer limit;

  public static final String JSON_PROPERTY_ACTIVE = "active";
  private Boolean active;

  public static final String JSON_PROPERTY_PRODUCT_ID = "productId";
  private String productId;

  public static final String JSON_PROPERTY_PRODUCT_STREAM_ID = "productStreamId";
  private String productStreamId;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public CrossSellingElementCollectionInnerCrossSelling() {
  }

  public CrossSellingElementCollectionInnerCrossSelling name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public CrossSellingElementCollectionInnerCrossSelling position(Integer position) {
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPosition() {
    return position;
  }


  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPosition(Integer position) {
    this.position = position;
  }


  public CrossSellingElementCollectionInnerCrossSelling sortBy(String sortBy) {
    
    this.sortBy = sortBy;
    return this;
  }

   /**
   * Get sortBy
   * @return sortBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SORT_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSortBy() {
    return sortBy;
  }


  @JsonProperty(JSON_PROPERTY_SORT_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSortBy(String sortBy) {
    this.sortBy = sortBy;
  }


  public CrossSellingElementCollectionInnerCrossSelling sortDirection(String sortDirection) {
    
    this.sortDirection = sortDirection;
    return this;
  }

   /**
   * Get sortDirection
   * @return sortDirection
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SORT_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSortDirection() {
    return sortDirection;
  }


  @JsonProperty(JSON_PROPERTY_SORT_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSortDirection(String sortDirection) {
    this.sortDirection = sortDirection;
  }


  public CrossSellingElementCollectionInnerCrossSelling limit(Integer limit) {
    
    this.limit = limit;
    return this;
  }

   /**
   * Get limit
   * @return limit
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLimit() {
    return limit;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimit(Integer limit) {
    this.limit = limit;
  }


  public CrossSellingElementCollectionInnerCrossSelling active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActive() {
    return active;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActive(Boolean active) {
    this.active = active;
  }


  public CrossSellingElementCollectionInnerCrossSelling productId(String productId) {
    
    this.productId = productId;
    return this;
  }

   /**
   * Get productId
   * @return productId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductId() {
    return productId;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductId(String productId) {
    this.productId = productId;
  }


  public CrossSellingElementCollectionInnerCrossSelling productStreamId(String productStreamId) {
    
    this.productStreamId = productStreamId;
    return this;
  }

   /**
   * Get productStreamId
   * @return productStreamId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRODUCT_STREAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductStreamId() {
    return productStreamId;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_STREAM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductStreamId(String productStreamId) {
    this.productStreamId = productStreamId;
  }


  public CrossSellingElementCollectionInnerCrossSelling type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CrossSellingElementCollectionInnerCrossSelling crossSellingElementCollectionInnerCrossSelling = (CrossSellingElementCollectionInnerCrossSelling) o;
    return Objects.equals(this.name, crossSellingElementCollectionInnerCrossSelling.name) &&
        Objects.equals(this.position, crossSellingElementCollectionInnerCrossSelling.position) &&
        Objects.equals(this.sortBy, crossSellingElementCollectionInnerCrossSelling.sortBy) &&
        Objects.equals(this.sortDirection, crossSellingElementCollectionInnerCrossSelling.sortDirection) &&
        Objects.equals(this.limit, crossSellingElementCollectionInnerCrossSelling.limit) &&
        Objects.equals(this.active, crossSellingElementCollectionInnerCrossSelling.active) &&
        Objects.equals(this.productId, crossSellingElementCollectionInnerCrossSelling.productId) &&
        Objects.equals(this.productStreamId, crossSellingElementCollectionInnerCrossSelling.productStreamId) &&
        Objects.equals(this.type, crossSellingElementCollectionInnerCrossSelling.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, position, sortBy, sortDirection, limit, active, productId, productStreamId, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CrossSellingElementCollectionInnerCrossSelling {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    sortDirection: ").append(toIndentedString(sortDirection)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    productStreamId: ").append(toIndentedString(productStreamId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

