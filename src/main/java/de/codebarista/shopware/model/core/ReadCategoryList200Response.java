/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model.core;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * ReadCategoryList200Response
 */
@JsonPropertyOrder({
  ReadCategoryList200Response.JSON_PROPERTY_API_ALIAS,
  ReadCategoryList200Response.JSON_PROPERTY_ENTITY,
  ReadCategoryList200Response.JSON_PROPERTY_TOTAL,
  ReadCategoryList200Response.JSON_PROPERTY_AGGREGATIONS,
  ReadCategoryList200Response.JSON_PROPERTY_PAGE,
  ReadCategoryList200Response.JSON_PROPERTY_LIMIT,
  ReadCategoryList200Response.JSON_PROPERTY_ELEMENTS
})
@JsonTypeName("readCategoryList_200_response")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class ReadCategoryList200Response {
  public static final String JSON_PROPERTY_API_ALIAS = "apiAlias";
  private String apiAlias;

  public static final String JSON_PROPERTY_ENTITY = "entity";
  private String entity;

  public static final String JSON_PROPERTY_TOTAL = "total";
  private Integer total;

  public static final String JSON_PROPERTY_AGGREGATIONS = "aggregations";
  private List<Object> aggregations = new ArrayList<>();

  public static final String JSON_PROPERTY_PAGE = "page";
  private Integer page;

  public static final String JSON_PROPERTY_LIMIT = "limit";
  private Integer limit;

  public static final String JSON_PROPERTY_ELEMENTS = "elements";
  private List<Category> elements = new ArrayList<>();

  public ReadCategoryList200Response() {
  }

  public ReadCategoryList200Response apiAlias(String apiAlias) {
    
    this.apiAlias = apiAlias;
    return this;
  }

   /**
   * Alias which can be used to restrict response fields. For more information see [includes](https://shopware.stoplight.io/docs/store-api/docs/concepts/search-queries.md#includes-apialias).
   * @return apiAlias
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_API_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getApiAlias() {
    return apiAlias;
  }


  @JsonProperty(JSON_PROPERTY_API_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApiAlias(String apiAlias) {
    this.apiAlias = apiAlias;
  }


  public ReadCategoryList200Response entity(String entity) {
    
    this.entity = entity;
    return this;
  }

   /**
   * Get entity
   * @return entity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEntity() {
    return entity;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntity(String entity) {
    this.entity = entity;
  }


  public ReadCategoryList200Response total(Integer total) {
    
    this.total = total;
    return this;
  }

   /**
   * The total number of found entities
   * @return total
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotal() {
    return total;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotal(Integer total) {
    this.total = total;
  }


  public ReadCategoryList200Response aggregations(List<Object> aggregations) {
    
    this.aggregations = aggregations;
    return this;
  }

  public ReadCategoryList200Response addAggregationsItem(Object aggregationsItem) {
    if (this.aggregations == null) {
      this.aggregations = new ArrayList<>();
    }
    this.aggregations.add(aggregationsItem);
    return this;
  }

   /**
   * Contains aggregated data. A simple example is the determination of the average price from a product search query.
   * @return aggregations
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AGGREGATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getAggregations() {
    return aggregations;
  }


  @JsonProperty(JSON_PROPERTY_AGGREGATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAggregations(List<Object> aggregations) {
    this.aggregations = aggregations;
  }


  public ReadCategoryList200Response page(Integer page) {
    
    this.page = page;
    return this;
  }

   /**
   * The actual page. This can be used for pagination.
   * @return page
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPage() {
    return page;
  }


  @JsonProperty(JSON_PROPERTY_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPage(Integer page) {
    this.page = page;
  }


  public ReadCategoryList200Response limit(Integer limit) {
    
    this.limit = limit;
    return this;
  }

   /**
   * The actual limit. This is used for pagination and goes together with the page.
   * @return limit
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLimit() {
    return limit;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimit(Integer limit) {
    this.limit = limit;
  }


  public ReadCategoryList200Response elements(List<Category> elements) {
    
    this.elements = elements;
    return this;
  }

  public ReadCategoryList200Response addElementsItem(Category elementsItem) {
    if (this.elements == null) {
      this.elements = new ArrayList<>();
    }
    this.elements.add(elementsItem);
    return this;
  }

   /**
   * Get elements
   * @return elements
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ELEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Category> getElements() {
    return elements;
  }


  @JsonProperty(JSON_PROPERTY_ELEMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElements(List<Category> elements) {
    this.elements = elements;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReadCategoryList200Response readCategoryList200Response = (ReadCategoryList200Response) o;
    return Objects.equals(this.apiAlias, readCategoryList200Response.apiAlias) &&
        Objects.equals(this.entity, readCategoryList200Response.entity) &&
        Objects.equals(this.total, readCategoryList200Response.total) &&
        Objects.equals(this.aggregations, readCategoryList200Response.aggregations) &&
        Objects.equals(this.page, readCategoryList200Response.page) &&
        Objects.equals(this.limit, readCategoryList200Response.limit) &&
        Objects.equals(this.elements, readCategoryList200Response.elements);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiAlias, entity, total, aggregations, page, limit, elements);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReadCategoryList200Response {\n");
    sb.append("    apiAlias: ").append(toIndentedString(apiAlias)).append("\n");
    sb.append("    entity: ").append(toIndentedString(entity)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    aggregations: ").append(toIndentedString(aggregations)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    elements: ").append(toIndentedString(elements)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

