/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model.core;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.time.OffsetDateTime;
import java.util.Objects;

/**
 * GenerateJWTAppSystemAppServer200Response
 */
@JsonPropertyOrder({
  GenerateJWTAppSystemAppServer200Response.JSON_PROPERTY_TOKEN,
  GenerateJWTAppSystemAppServer200Response.JSON_PROPERTY_EXPIRES,
  GenerateJWTAppSystemAppServer200Response.JSON_PROPERTY_SHOP_ID
})
@JsonTypeName("generateJWTAppSystemAppServer_200_response")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class GenerateJWTAppSystemAppServer200Response {
  public static final String JSON_PROPERTY_TOKEN = "token";
  private String token;

  public static final String JSON_PROPERTY_EXPIRES = "expires";
  private OffsetDateTime expires;

  public static final String JSON_PROPERTY_SHOP_ID = "shopId";
  private String shopId;

  public GenerateJWTAppSystemAppServer200Response() {
  }

  public GenerateJWTAppSystemAppServer200Response token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @JsonProperty(JSON_PROPERTY_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getToken() {
    return token;
  }


  @JsonProperty(JSON_PROPERTY_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToken(String token) {
    this.token = token;
  }


  public GenerateJWTAppSystemAppServer200Response expires(OffsetDateTime expires) {
    
    this.expires = expires;
    return this;
  }

   /**
   * Get expires
   * @return expires
  **/
  @JsonProperty(JSON_PROPERTY_EXPIRES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getExpires() {
    return expires;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpires(OffsetDateTime expires) {
    this.expires = expires;
  }


  public GenerateJWTAppSystemAppServer200Response shopId(String shopId) {
    
    this.shopId = shopId;
    return this;
  }

   /**
   * Get shopId
   * @return shopId
  **/
  @JsonProperty(JSON_PROPERTY_SHOP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShopId() {
    return shopId;
  }


  @JsonProperty(JSON_PROPERTY_SHOP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShopId(String shopId) {
    this.shopId = shopId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenerateJWTAppSystemAppServer200Response generateJWTAppSystemAppServer200Response = (GenerateJWTAppSystemAppServer200Response) o;
    return Objects.equals(this.token, generateJWTAppSystemAppServer200Response.token) &&
        Objects.equals(this.expires, generateJWTAppSystemAppServer200Response.expires) &&
        Objects.equals(this.shopId, generateJWTAppSystemAppServer200Response.shopId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(token, expires, shopId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenerateJWTAppSystemAppServer200Response {\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    expires: ").append(toIndentedString(expires)).append("\n");
    sb.append("    shopId: ").append(toIndentedString(shopId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
