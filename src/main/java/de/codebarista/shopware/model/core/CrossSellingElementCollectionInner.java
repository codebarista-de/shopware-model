/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model.core;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * CrossSellingElementCollectionInner
 */
@JsonPropertyOrder({
  CrossSellingElementCollectionInner.JSON_PROPERTY_CROSS_SELLING,
  CrossSellingElementCollectionInner.JSON_PROPERTY_PRODUCTS,
  CrossSellingElementCollectionInner.JSON_PROPERTY_TOTAL
})
@JsonTypeName("CrossSellingElementCollection_inner")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class CrossSellingElementCollectionInner {
  public static final String JSON_PROPERTY_CROSS_SELLING = "crossSelling";
  private CrossSellingElementCollectionInnerCrossSelling crossSelling;

  public static final String JSON_PROPERTY_PRODUCTS = "products";
  private List<Product> products = new ArrayList<>();

  public static final String JSON_PROPERTY_TOTAL = "total";
  private Integer total;

  public CrossSellingElementCollectionInner() {
  }

  public CrossSellingElementCollectionInner crossSelling(CrossSellingElementCollectionInnerCrossSelling crossSelling) {
    
    this.crossSelling = crossSelling;
    return this;
  }

   /**
   * Get crossSelling
   * @return crossSelling
  **/
  @JsonProperty(JSON_PROPERTY_CROSS_SELLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CrossSellingElementCollectionInnerCrossSelling getCrossSelling() {
    return crossSelling;
  }


  @JsonProperty(JSON_PROPERTY_CROSS_SELLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCrossSelling(CrossSellingElementCollectionInnerCrossSelling crossSelling) {
    this.crossSelling = crossSelling;
  }


  public CrossSellingElementCollectionInner products(List<Product> products) {
    
    this.products = products;
    return this;
  }

  public CrossSellingElementCollectionInner addProductsItem(Product productsItem) {
    if (this.products == null) {
      this.products = new ArrayList<>();
    }
    this.products.add(productsItem);
    return this;
  }

   /**
   * Get products
   * @return products
  **/
  @JsonProperty(JSON_PROPERTY_PRODUCTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Product> getProducts() {
    return products;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProducts(List<Product> products) {
    this.products = products;
  }


  public CrossSellingElementCollectionInner total(Integer total) {
    
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotal() {
    return total;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotal(Integer total) {
    this.total = total;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CrossSellingElementCollectionInner crossSellingElementCollectionInner = (CrossSellingElementCollectionInner) o;
    return Objects.equals(this.crossSelling, crossSellingElementCollectionInner.crossSelling) &&
        Objects.equals(this.products, crossSellingElementCollectionInner.products) &&
        Objects.equals(this.total, crossSellingElementCollectionInner.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(crossSelling, products, total);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CrossSellingElementCollectionInner {\n");
    sb.append("    crossSelling: ").append(toIndentedString(crossSelling)).append("\n");
    sb.append("    products: ").append(toIndentedString(products)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
