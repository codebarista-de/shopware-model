/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model.core;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.Objects;

/**
 * Selected payment method
 */
@JsonPropertyOrder({
  SalesChannelContextAllOfPaymentMethod.JSON_PROPERTY_PLUGIN_ID,
  SalesChannelContextAllOfPaymentMethod.JSON_PROPERTY_HANDLER_IDENTIFIER,
  SalesChannelContextAllOfPaymentMethod.JSON_PROPERTY_NAME,
  SalesChannelContextAllOfPaymentMethod.JSON_PROPERTY_DESCRIPTION,
  SalesChannelContextAllOfPaymentMethod.JSON_PROPERTY_POSITION,
  SalesChannelContextAllOfPaymentMethod.JSON_PROPERTY_ACTIVE,
  SalesChannelContextAllOfPaymentMethod.JSON_PROPERTY_AVAILABILITY_RULE_ID,
  SalesChannelContextAllOfPaymentMethod.JSON_PROPERTY_MEDIA_ID,
  SalesChannelContextAllOfPaymentMethod.JSON_PROPERTY_FORMATTED_HANDLER_IDENTIFIER
})
@JsonTypeName("SalesChannelContext_allOf_paymentMethod")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class SalesChannelContextAllOfPaymentMethod {
  public static final String JSON_PROPERTY_PLUGIN_ID = "pluginId";
  private String pluginId;

  public static final String JSON_PROPERTY_HANDLER_IDENTIFIER = "handlerIdentifier";
  private String handlerIdentifier;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_POSITION = "position";
  private Integer position;

  public static final String JSON_PROPERTY_ACTIVE = "active";
  private Boolean active;

  public static final String JSON_PROPERTY_AVAILABILITY_RULE_ID = "availabilityRuleId";
  private String availabilityRuleId;

  public static final String JSON_PROPERTY_MEDIA_ID = "mediaId";
  private String mediaId;

  public static final String JSON_PROPERTY_FORMATTED_HANDLER_IDENTIFIER = "formattedHandlerIdentifier";
  private String formattedHandlerIdentifier;

  public SalesChannelContextAllOfPaymentMethod() {
  }

  public SalesChannelContextAllOfPaymentMethod pluginId(String pluginId) {
    
    this.pluginId = pluginId;
    return this;
  }

   /**
   * Get pluginId
   * @return pluginId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLUGIN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPluginId() {
    return pluginId;
  }


  @JsonProperty(JSON_PROPERTY_PLUGIN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPluginId(String pluginId) {
    this.pluginId = pluginId;
  }


  public SalesChannelContextAllOfPaymentMethod handlerIdentifier(String handlerIdentifier) {
    
    this.handlerIdentifier = handlerIdentifier;
    return this;
  }

   /**
   * Get handlerIdentifier
   * @return handlerIdentifier
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HANDLER_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHandlerIdentifier() {
    return handlerIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_HANDLER_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHandlerIdentifier(String handlerIdentifier) {
    this.handlerIdentifier = handlerIdentifier;
  }


  public SalesChannelContextAllOfPaymentMethod name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public SalesChannelContextAllOfPaymentMethod description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public SalesChannelContextAllOfPaymentMethod position(Integer position) {
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPosition() {
    return position;
  }


  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPosition(Integer position) {
    this.position = position;
  }


  public SalesChannelContextAllOfPaymentMethod active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActive() {
    return active;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActive(Boolean active) {
    this.active = active;
  }


  public SalesChannelContextAllOfPaymentMethod availabilityRuleId(String availabilityRuleId) {
    
    this.availabilityRuleId = availabilityRuleId;
    return this;
  }

   /**
   * Get availabilityRuleId
   * @return availabilityRuleId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABILITY_RULE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAvailabilityRuleId() {
    return availabilityRuleId;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABILITY_RULE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailabilityRuleId(String availabilityRuleId) {
    this.availabilityRuleId = availabilityRuleId;
  }


  public SalesChannelContextAllOfPaymentMethod mediaId(String mediaId) {
    
    this.mediaId = mediaId;
    return this;
  }

   /**
   * Get mediaId
   * @return mediaId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEDIA_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMediaId() {
    return mediaId;
  }


  @JsonProperty(JSON_PROPERTY_MEDIA_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMediaId(String mediaId) {
    this.mediaId = mediaId;
  }


  public SalesChannelContextAllOfPaymentMethod formattedHandlerIdentifier(String formattedHandlerIdentifier) {
    
    this.formattedHandlerIdentifier = formattedHandlerIdentifier;
    return this;
  }

   /**
   * Get formattedHandlerIdentifier
   * @return formattedHandlerIdentifier
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FORMATTED_HANDLER_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFormattedHandlerIdentifier() {
    return formattedHandlerIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_FORMATTED_HANDLER_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFormattedHandlerIdentifier(String formattedHandlerIdentifier) {
    this.formattedHandlerIdentifier = formattedHandlerIdentifier;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesChannelContextAllOfPaymentMethod salesChannelContextAllOfPaymentMethod = (SalesChannelContextAllOfPaymentMethod) o;
    return Objects.equals(this.pluginId, salesChannelContextAllOfPaymentMethod.pluginId) &&
        Objects.equals(this.handlerIdentifier, salesChannelContextAllOfPaymentMethod.handlerIdentifier) &&
        Objects.equals(this.name, salesChannelContextAllOfPaymentMethod.name) &&
        Objects.equals(this.description, salesChannelContextAllOfPaymentMethod.description) &&
        Objects.equals(this.position, salesChannelContextAllOfPaymentMethod.position) &&
        Objects.equals(this.active, salesChannelContextAllOfPaymentMethod.active) &&
        Objects.equals(this.availabilityRuleId, salesChannelContextAllOfPaymentMethod.availabilityRuleId) &&
        Objects.equals(this.mediaId, salesChannelContextAllOfPaymentMethod.mediaId) &&
        Objects.equals(this.formattedHandlerIdentifier, salesChannelContextAllOfPaymentMethod.formattedHandlerIdentifier);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pluginId, handlerIdentifier, name, description, position, active, availabilityRuleId, mediaId, formattedHandlerIdentifier);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesChannelContextAllOfPaymentMethod {\n");
    sb.append("    pluginId: ").append(toIndentedString(pluginId)).append("\n");
    sb.append("    handlerIdentifier: ").append(toIndentedString(handlerIdentifier)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    availabilityRuleId: ").append(toIndentedString(availabilityRuleId)).append("\n");
    sb.append("    mediaId: ").append(toIndentedString(mediaId)).append("\n");
    sb.append("    formattedHandlerIdentifier: ").append(toIndentedString(formattedHandlerIdentifier)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

