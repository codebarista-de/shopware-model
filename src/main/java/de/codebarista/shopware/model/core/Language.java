/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model.core;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Added since version: 6.0.0.0
 */
@JsonPropertyOrder({
  Language.JSON_PROPERTY_ID,
  Language.JSON_PROPERTY_PARENT_ID,
  Language.JSON_PROPERTY_LOCALE_ID,
  Language.JSON_PROPERTY_TRANSLATION_CODE_ID,
  Language.JSON_PROPERTY_NAME,
  Language.JSON_PROPERTY_CUSTOM_FIELDS,
  Language.JSON_PROPERTY_CREATED_AT,
  Language.JSON_PROPERTY_UPDATED_AT,
  Language.JSON_PROPERTY_PARENT,
  Language.JSON_PROPERTY_LOCALE,
  Language.JSON_PROPERTY_TRANSLATION_CODE,
  Language.JSON_PROPERTY_CHILDREN
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class Language {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_PARENT_ID = "parentId";
  private String parentId;

  public static final String JSON_PROPERTY_LOCALE_ID = "localeId";
  private String localeId;

  public static final String JSON_PROPERTY_TRANSLATION_CODE_ID = "translationCodeId";
  private String translationCodeId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_CUSTOM_FIELDS = "customFields";
  private Object customFields;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_PARENT = "parent";
  private Language parent;

  public static final String JSON_PROPERTY_LOCALE = "locale";
  private Locale locale;

  public static final String JSON_PROPERTY_TRANSLATION_CODE = "translationCode";
  private Locale translationCode;

  public static final String JSON_PROPERTY_CHILDREN = "children";
  private List<Language> children = new ArrayList<>();

  public Language() {
  }

  @JsonCreator
  public Language(
    @JsonProperty(JSON_PROPERTY_CREATED_AT) OffsetDateTime createdAt, 
    @JsonProperty(JSON_PROPERTY_UPDATED_AT) OffsetDateTime updatedAt
  ) {
    this();
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }

  public Language id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public Language parentId(String parentId) {
    
    this.parentId = parentId;
    return this;
  }

   /**
   * Get parentId
   * @return parentId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getParentId() {
    return parentId;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParentId(String parentId) {
    this.parentId = parentId;
  }


  public Language localeId(String localeId) {
    
    this.localeId = localeId;
    return this;
  }

   /**
   * Get localeId
   * @return localeId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOCALE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLocaleId() {
    return localeId;
  }


  @JsonProperty(JSON_PROPERTY_LOCALE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocaleId(String localeId) {
    this.localeId = localeId;
  }


  public Language translationCodeId(String translationCodeId) {
    
    this.translationCodeId = translationCodeId;
    return this;
  }

   /**
   * Get translationCodeId
   * @return translationCodeId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSLATION_CODE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTranslationCodeId() {
    return translationCodeId;
  }


  @JsonProperty(JSON_PROPERTY_TRANSLATION_CODE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTranslationCodeId(String translationCodeId) {
    this.translationCodeId = translationCodeId;
  }


  public Language name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public Language customFields(Object customFields) {
    
    this.customFields = customFields;
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getCustomFields() {
    return customFields;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


   /**
   * Get createdAt
   * @return createdAt
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }




  public Language parent(Language parent) {
    
    this.parent = parent;
    return this;
  }

   /**
   * Get parent
   * @return parent
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Language getParent() {
    return parent;
  }


  @JsonProperty(JSON_PROPERTY_PARENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParent(Language parent) {
    this.parent = parent;
  }


  public Language locale(Locale locale) {
    
    this.locale = locale;
    return this;
  }

   /**
   * Get locale
   * @return locale
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Locale getLocale() {
    return locale;
  }


  @JsonProperty(JSON_PROPERTY_LOCALE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocale(Locale locale) {
    this.locale = locale;
  }


  public Language translationCode(Locale translationCode) {
    
    this.translationCode = translationCode;
    return this;
  }

   /**
   * Get translationCode
   * @return translationCode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSLATION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Locale getTranslationCode() {
    return translationCode;
  }


  @JsonProperty(JSON_PROPERTY_TRANSLATION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTranslationCode(Locale translationCode) {
    this.translationCode = translationCode;
  }


  public Language children(List<Language> children) {
    
    this.children = children;
    return this;
  }

  public Language addChildrenItem(Language childrenItem) {
    if (this.children == null) {
      this.children = new ArrayList<>();
    }
    this.children.add(childrenItem);
    return this;
  }

   /**
   * Get children
   * @return children
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Language> getChildren() {
    return children;
  }


  @JsonProperty(JSON_PROPERTY_CHILDREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChildren(List<Language> children) {
    this.children = children;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Language language = (Language) o;
    return Objects.equals(this.id, language.id) &&
        Objects.equals(this.parentId, language.parentId) &&
        Objects.equals(this.localeId, language.localeId) &&
        Objects.equals(this.translationCodeId, language.translationCodeId) &&
        Objects.equals(this.name, language.name) &&
        Objects.equals(this.customFields, language.customFields) &&
        Objects.equals(this.createdAt, language.createdAt) &&
        Objects.equals(this.updatedAt, language.updatedAt) &&
        Objects.equals(this.parent, language.parent) &&
        Objects.equals(this.locale, language.locale) &&
        Objects.equals(this.translationCode, language.translationCode) &&
        Objects.equals(this.children, language.children);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, parentId, localeId, translationCodeId, name, customFields, createdAt, updatedAt, parent, locale, translationCode, children);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Language {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    localeId: ").append(toIndentedString(localeId)).append("\n");
    sb.append("    translationCodeId: ").append(toIndentedString(translationCodeId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    translationCode: ").append(toIndentedString(translationCode)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

