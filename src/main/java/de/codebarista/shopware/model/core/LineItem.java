/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model.core;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.util.Objects;

/**
 * LineItem
 */
@JsonPropertyOrder({
  LineItem.JSON_PROPERTY_ID,
  LineItem.JSON_PROPERTY_REFERENCED_ID,
  LineItem.JSON_PROPERTY_LABEL,
  LineItem.JSON_PROPERTY_QUANTITY,
  LineItem.JSON_PROPERTY_TYPE,
  LineItem.JSON_PROPERTY_GOOD,
  LineItem.JSON_PROPERTY_DESCRIPTION,
  LineItem.JSON_PROPERTY_REMOVABLE,
  LineItem.JSON_PROPERTY_STACKABLE,
  LineItem.JSON_PROPERTY_MODIFIED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class LineItem {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_REFERENCED_ID = "referencedId";
  private String referencedId;

  public static final String JSON_PROPERTY_LABEL = "label";
  private String label;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  private Integer quantity;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_GOOD = "good";
  private Boolean good;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_REMOVABLE = "removable";
  private Boolean removable;

  public static final String JSON_PROPERTY_STACKABLE = "stackable";
  private Boolean stackable;

  public static final String JSON_PROPERTY_MODIFIED = "modified";
  private Boolean modified;

  public LineItem() {
  }

  public LineItem id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public LineItem referencedId(String referencedId) {
    
    this.referencedId = referencedId;
    return this;
  }

   /**
   * Get referencedId
   * @return referencedId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFERENCED_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReferencedId() {
    return referencedId;
  }


  @JsonProperty(JSON_PROPERTY_REFERENCED_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReferencedId(String referencedId) {
    this.referencedId = referencedId;
  }


  public LineItem label(String label) {
    
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(String label) {
    this.label = label;
  }


  public LineItem quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public LineItem type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public LineItem good(Boolean good) {
    
    this.good = good;
    return this;
  }

   /**
   * Get good
   * @return good
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GOOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getGood() {
    return good;
  }


  @JsonProperty(JSON_PROPERTY_GOOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGood(Boolean good) {
    this.good = good;
  }


  public LineItem description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public LineItem removable(Boolean removable) {
    
    this.removable = removable;
    return this;
  }

   /**
   * Get removable
   * @return removable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REMOVABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRemovable() {
    return removable;
  }


  @JsonProperty(JSON_PROPERTY_REMOVABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemovable(Boolean removable) {
    this.removable = removable;
  }


  public LineItem stackable(Boolean stackable) {
    
    this.stackable = stackable;
    return this;
  }

   /**
   * Get stackable
   * @return stackable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STACKABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getStackable() {
    return stackable;
  }


  @JsonProperty(JSON_PROPERTY_STACKABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStackable(Boolean stackable) {
    this.stackable = stackable;
  }


  public LineItem modified(Boolean modified) {
    
    this.modified = modified;
    return this;
  }

   /**
   * Get modified
   * @return modified
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MODIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getModified() {
    return modified;
  }


  @JsonProperty(JSON_PROPERTY_MODIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModified(Boolean modified) {
    this.modified = modified;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LineItem lineItem = (LineItem) o;
    return Objects.equals(this.id, lineItem.id) &&
        Objects.equals(this.referencedId, lineItem.referencedId) &&
        Objects.equals(this.label, lineItem.label) &&
        Objects.equals(this.quantity, lineItem.quantity) &&
        Objects.equals(this.type, lineItem.type) &&
        Objects.equals(this.good, lineItem.good) &&
        Objects.equals(this.description, lineItem.description) &&
        Objects.equals(this.removable, lineItem.removable) &&
        Objects.equals(this.stackable, lineItem.stackable) &&
        Objects.equals(this.modified, lineItem.modified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, referencedId, label, quantity, type, good, description, removable, stackable, modified);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LineItem {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    referencedId: ").append(toIndentedString(referencedId)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    good: ").append(toIndentedString(good)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    removable: ").append(toIndentedString(removable)).append("\n");
    sb.append("    stackable: ").append(toIndentedString(stackable)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

