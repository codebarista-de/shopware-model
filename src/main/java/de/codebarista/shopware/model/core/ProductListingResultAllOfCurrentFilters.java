/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model.core;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Contains the state of the filters. These can be used to create listing filters.
 */
@JsonPropertyOrder({
  ProductListingResultAllOfCurrentFilters.JSON_PROPERTY_NAVIGATION_ID,
  ProductListingResultAllOfCurrentFilters.JSON_PROPERTY_MANUFACTURER,
  ProductListingResultAllOfCurrentFilters.JSON_PROPERTY_PRICE,
  ProductListingResultAllOfCurrentFilters.JSON_PROPERTY_RATING,
  ProductListingResultAllOfCurrentFilters.JSON_PROPERTY_SHIPPING_FREE,
  ProductListingResultAllOfCurrentFilters.JSON_PROPERTY_PROPERTIES
})
@JsonTypeName("ProductListingResult_allOf_currentFilters")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class ProductListingResultAllOfCurrentFilters {
  public static final String JSON_PROPERTY_NAVIGATION_ID = "navigationId";
  private String navigationId;

  public static final String JSON_PROPERTY_MANUFACTURER = "manufacturer";
  private List<Object> manufacturer = new ArrayList<>();

  public static final String JSON_PROPERTY_PRICE = "price";
  private ProductListingResultAllOfCurrentFiltersPrice price;

  public static final String JSON_PROPERTY_RATING = "rating";
  private Integer rating;

  public static final String JSON_PROPERTY_SHIPPING_FREE = "shipping-free";
  private Boolean shippingFree;

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private List<Object> properties = new ArrayList<>();

  public ProductListingResultAllOfCurrentFilters() {
  }

  public ProductListingResultAllOfCurrentFilters navigationId(String navigationId) {
    
    this.navigationId = navigationId;
    return this;
  }

   /**
   * Get navigationId
   * @return navigationId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAVIGATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNavigationId() {
    return navigationId;
  }


  @JsonProperty(JSON_PROPERTY_NAVIGATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNavigationId(String navigationId) {
    this.navigationId = navigationId;
  }


  public ProductListingResultAllOfCurrentFilters manufacturer(List<Object> manufacturer) {
    
    this.manufacturer = manufacturer;
    return this;
  }

  public ProductListingResultAllOfCurrentFilters addManufacturerItem(Object manufacturerItem) {
    if (this.manufacturer == null) {
      this.manufacturer = new ArrayList<>();
    }
    this.manufacturer.add(manufacturerItem);
    return this;
  }

   /**
   * Get manufacturer
   * @return manufacturer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MANUFACTURER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getManufacturer() {
    return manufacturer;
  }


  @JsonProperty(JSON_PROPERTY_MANUFACTURER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setManufacturer(List<Object> manufacturer) {
    this.manufacturer = manufacturer;
  }


  public ProductListingResultAllOfCurrentFilters price(ProductListingResultAllOfCurrentFiltersPrice price) {
    
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProductListingResultAllOfCurrentFiltersPrice getPrice() {
    return price;
  }


  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrice(ProductListingResultAllOfCurrentFiltersPrice price) {
    this.price = price;
  }


  public ProductListingResultAllOfCurrentFilters rating(Integer rating) {
    
    this.rating = rating;
    return this;
  }

   /**
   * Get rating
   * @return rating
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRating() {
    return rating;
  }


  @JsonProperty(JSON_PROPERTY_RATING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRating(Integer rating) {
    this.rating = rating;
  }


  public ProductListingResultAllOfCurrentFilters shippingFree(Boolean shippingFree) {
    
    this.shippingFree = shippingFree;
    return this;
  }

   /**
   * Get shippingFree
   * @return shippingFree
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHIPPING_FREE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getShippingFree() {
    return shippingFree;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_FREE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingFree(Boolean shippingFree) {
    this.shippingFree = shippingFree;
  }


  public ProductListingResultAllOfCurrentFilters properties(List<Object> properties) {
    
    this.properties = properties;
    return this;
  }

  public ProductListingResultAllOfCurrentFilters addPropertiesItem(Object propertiesItem) {
    if (this.properties == null) {
      this.properties = new ArrayList<>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Object> getProperties() {
    return properties;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperties(List<Object> properties) {
    this.properties = properties;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductListingResultAllOfCurrentFilters productListingResultAllOfCurrentFilters = (ProductListingResultAllOfCurrentFilters) o;
    return Objects.equals(this.navigationId, productListingResultAllOfCurrentFilters.navigationId) &&
        Objects.equals(this.manufacturer, productListingResultAllOfCurrentFilters.manufacturer) &&
        Objects.equals(this.price, productListingResultAllOfCurrentFilters.price) &&
        Objects.equals(this.rating, productListingResultAllOfCurrentFilters.rating) &&
        Objects.equals(this.shippingFree, productListingResultAllOfCurrentFilters.shippingFree) &&
        Objects.equals(this.properties, productListingResultAllOfCurrentFilters.properties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(navigationId, manufacturer, price, rating, shippingFree, properties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductListingResultAllOfCurrentFilters {\n");
    sb.append("    navigationId: ").append(toIndentedString(navigationId)).append("\n");
    sb.append("    manufacturer: ").append(toIndentedString(manufacturer)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    shippingFree: ").append(toIndentedString(shippingFree)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

