/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model.core;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import org.openapitools.jackson.nullable.JsonNullable;

import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * Added since version: 6.0.0.0
 */
@JsonPropertyOrder({
  SeoUrlJsonApi.JSON_PROPERTY_TYPE,
  SeoUrlJsonApi.JSON_PROPERTY_ID,
  SeoUrlJsonApi.JSON_PROPERTY_ATTRIBUTES,
  SeoUrlJsonApi.JSON_PROPERTY_RELATIONSHIPS,
  SeoUrlJsonApi.JSON_PROPERTY_LINKS,
  SeoUrlJsonApi.JSON_PROPERTY_META,
  SeoUrlJsonApi.JSON_PROPERTY_SALES_CHANNEL_ID,
  SeoUrlJsonApi.JSON_PROPERTY_LANGUAGE_ID,
  SeoUrlJsonApi.JSON_PROPERTY_FOREIGN_KEY,
  SeoUrlJsonApi.JSON_PROPERTY_ROUTE_NAME,
  SeoUrlJsonApi.JSON_PROPERTY_PATH_INFO,
  SeoUrlJsonApi.JSON_PROPERTY_SEO_PATH_INFO,
  SeoUrlJsonApi.JSON_PROPERTY_IS_CANONICAL,
  SeoUrlJsonApi.JSON_PROPERTY_IS_MODIFIED,
  SeoUrlJsonApi.JSON_PROPERTY_IS_DELETED,
  SeoUrlJsonApi.JSON_PROPERTY_URL,
  SeoUrlJsonApi.JSON_PROPERTY_CUSTOM_FIELDS,
  SeoUrlJsonApi.JSON_PROPERTY_IS_VALID,
  SeoUrlJsonApi.JSON_PROPERTY_CREATED_AT,
  SeoUrlJsonApi.JSON_PROPERTY_UPDATED_AT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class SeoUrlJsonApi {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private Map<String, Object> attributes = new HashMap<>();

  public static final String JSON_PROPERTY_RELATIONSHIPS = "relationships";
  private JsonNullable<Relationships> relationships = JsonNullable.<Relationships>undefined();

  public static final String JSON_PROPERTY_LINKS = "links";
  private Map<String, Link> links = new HashMap<>();

  public static final String JSON_PROPERTY_META = "meta";
  private Map<String, Object> meta = new HashMap<>();

  public static final String JSON_PROPERTY_SALES_CHANNEL_ID = "salesChannelId";
  private String salesChannelId;

  public static final String JSON_PROPERTY_LANGUAGE_ID = "languageId";
  private String languageId;

  public static final String JSON_PROPERTY_FOREIGN_KEY = "foreignKey";
  private String foreignKey;

  public static final String JSON_PROPERTY_ROUTE_NAME = "routeName";
  private String routeName;

  public static final String JSON_PROPERTY_PATH_INFO = "pathInfo";
  private String pathInfo;

  public static final String JSON_PROPERTY_SEO_PATH_INFO = "seoPathInfo";
  private String seoPathInfo;

  public static final String JSON_PROPERTY_IS_CANONICAL = "isCanonical";
  private Boolean isCanonical;

  public static final String JSON_PROPERTY_IS_MODIFIED = "isModified";
  private Boolean isModified;

  public static final String JSON_PROPERTY_IS_DELETED = "isDeleted";
  private Boolean isDeleted;

  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_CUSTOM_FIELDS = "customFields";
  private Object customFields;

  public static final String JSON_PROPERTY_IS_VALID = "isValid";
  private Boolean isValid;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  private OffsetDateTime updatedAt;

  public SeoUrlJsonApi() {
  }

  @JsonCreator
  public SeoUrlJsonApi(
    @JsonProperty(JSON_PROPERTY_CREATED_AT) OffsetDateTime createdAt, 
    @JsonProperty(JSON_PROPERTY_UPDATED_AT) OffsetDateTime updatedAt
  ) {
    this();
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }

  public SeoUrlJsonApi type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public SeoUrlJsonApi id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public SeoUrlJsonApi attributes(Map<String, Object> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public SeoUrlJsonApi putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Members of the attributes object (\&quot;attributes\&quot;) represent information about the resource object in which it&#39;s defined.
   * @return attributes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public SeoUrlJsonApi relationships(Relationships relationships) {
    this.relationships = JsonNullable.<Relationships>of(relationships);
    
    return this;
  }

   /**
   * Get relationships
   * @return relationships
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Relationships getRelationships() {
        return relationships.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Relationships> getRelationships_JsonNullable() {
    return relationships;
  }
  
  @JsonProperty(JSON_PROPERTY_RELATIONSHIPS)
  public void setRelationships_JsonNullable(JsonNullable<Relationships> relationships) {
    this.relationships = relationships;
  }

  public void setRelationships(Relationships relationships) {
    this.relationships = JsonNullable.<Relationships>of(relationships);
  }


  public SeoUrlJsonApi links(Map<String, Link> links) {
    
    this.links = links;
    return this;
  }

  public SeoUrlJsonApi putLinksItem(String key, Link linksItem) {
    if (this.links == null) {
      this.links = new HashMap<>();
    }
    this.links.put(key, linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Link> getLinks() {
    return links;
  }


  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinks(Map<String, Link> links) {
    this.links = links;
  }


  public SeoUrlJsonApi meta(Map<String, Object> meta) {
    
    this.meta = meta;
    return this;
  }

  public SeoUrlJsonApi putMetaItem(String key, Object metaItem) {
    if (this.meta == null) {
      this.meta = new HashMap<>();
    }
    this.meta.put(key, metaItem);
    return this;
  }

   /**
   * Non-standard meta-information that can not be represented as an attribute or relationship.
   * @return meta
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_META)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getMeta() {
    return meta;
  }


  @JsonProperty(JSON_PROPERTY_META)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setMeta(Map<String, Object> meta) {
    this.meta = meta;
  }


  public SeoUrlJsonApi salesChannelId(String salesChannelId) {
    
    this.salesChannelId = salesChannelId;
    return this;
  }

   /**
   * Get salesChannelId
   * @return salesChannelId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SALES_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSalesChannelId() {
    return salesChannelId;
  }


  @JsonProperty(JSON_PROPERTY_SALES_CHANNEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSalesChannelId(String salesChannelId) {
    this.salesChannelId = salesChannelId;
  }


  public SeoUrlJsonApi languageId(String languageId) {
    
    this.languageId = languageId;
    return this;
  }

   /**
   * Get languageId
   * @return languageId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LANGUAGE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLanguageId() {
    return languageId;
  }


  @JsonProperty(JSON_PROPERTY_LANGUAGE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLanguageId(String languageId) {
    this.languageId = languageId;
  }


  public SeoUrlJsonApi foreignKey(String foreignKey) {
    
    this.foreignKey = foreignKey;
    return this;
  }

   /**
   * Get foreignKey
   * @return foreignKey
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FOREIGN_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getForeignKey() {
    return foreignKey;
  }


  @JsonProperty(JSON_PROPERTY_FOREIGN_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setForeignKey(String foreignKey) {
    this.foreignKey = foreignKey;
  }


  public SeoUrlJsonApi routeName(String routeName) {
    
    this.routeName = routeName;
    return this;
  }

   /**
   * Get routeName
   * @return routeName
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ROUTE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRouteName() {
    return routeName;
  }


  @JsonProperty(JSON_PROPERTY_ROUTE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRouteName(String routeName) {
    this.routeName = routeName;
  }


  public SeoUrlJsonApi pathInfo(String pathInfo) {
    
    this.pathInfo = pathInfo;
    return this;
  }

   /**
   * Get pathInfo
   * @return pathInfo
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PATH_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPathInfo() {
    return pathInfo;
  }


  @JsonProperty(JSON_PROPERTY_PATH_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPathInfo(String pathInfo) {
    this.pathInfo = pathInfo;
  }


  public SeoUrlJsonApi seoPathInfo(String seoPathInfo) {
    
    this.seoPathInfo = seoPathInfo;
    return this;
  }

   /**
   * Get seoPathInfo
   * @return seoPathInfo
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SEO_PATH_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSeoPathInfo() {
    return seoPathInfo;
  }


  @JsonProperty(JSON_PROPERTY_SEO_PATH_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSeoPathInfo(String seoPathInfo) {
    this.seoPathInfo = seoPathInfo;
  }


  public SeoUrlJsonApi isCanonical(Boolean isCanonical) {
    
    this.isCanonical = isCanonical;
    return this;
  }

   /**
   * Get isCanonical
   * @return isCanonical
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_CANONICAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsCanonical() {
    return isCanonical;
  }


  @JsonProperty(JSON_PROPERTY_IS_CANONICAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsCanonical(Boolean isCanonical) {
    this.isCanonical = isCanonical;
  }


  public SeoUrlJsonApi isModified(Boolean isModified) {
    
    this.isModified = isModified;
    return this;
  }

   /**
   * Get isModified
   * @return isModified
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_MODIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsModified() {
    return isModified;
  }


  @JsonProperty(JSON_PROPERTY_IS_MODIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsModified(Boolean isModified) {
    this.isModified = isModified;
  }


  public SeoUrlJsonApi isDeleted(Boolean isDeleted) {
    
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Get isDeleted
   * @return isDeleted
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsDeleted() {
    return isDeleted;
  }


  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public SeoUrlJsonApi url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Runtime field, cannot be used as part of the criteria.
   * @return url
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUrl(String url) {
    this.url = url;
  }


  public SeoUrlJsonApi customFields(Object customFields) {
    
    this.customFields = customFields;
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getCustomFields() {
    return customFields;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


  public SeoUrlJsonApi isValid(Boolean isValid) {
    
    this.isValid = isValid;
    return this;
  }

   /**
   * Runtime field, cannot be used as part of the criteria.
   * @return isValid
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_VALID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsValid() {
    return isValid;
  }


  @JsonProperty(JSON_PROPERTY_IS_VALID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsValid(Boolean isValid) {
    this.isValid = isValid;
  }


   /**
   * Get createdAt
   * @return createdAt
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SeoUrlJsonApi seoUrlJsonApi = (SeoUrlJsonApi) o;
    return Objects.equals(this.type, seoUrlJsonApi.type) &&
        Objects.equals(this.id, seoUrlJsonApi.id) &&
        Objects.equals(this.attributes, seoUrlJsonApi.attributes) &&
        equalsNullable(this.relationships, seoUrlJsonApi.relationships) &&
        Objects.equals(this.links, seoUrlJsonApi.links) &&
        Objects.equals(this.meta, seoUrlJsonApi.meta) &&
        Objects.equals(this.salesChannelId, seoUrlJsonApi.salesChannelId) &&
        Objects.equals(this.languageId, seoUrlJsonApi.languageId) &&
        Objects.equals(this.foreignKey, seoUrlJsonApi.foreignKey) &&
        Objects.equals(this.routeName, seoUrlJsonApi.routeName) &&
        Objects.equals(this.pathInfo, seoUrlJsonApi.pathInfo) &&
        Objects.equals(this.seoPathInfo, seoUrlJsonApi.seoPathInfo) &&
        Objects.equals(this.isCanonical, seoUrlJsonApi.isCanonical) &&
        Objects.equals(this.isModified, seoUrlJsonApi.isModified) &&
        Objects.equals(this.isDeleted, seoUrlJsonApi.isDeleted) &&
        Objects.equals(this.url, seoUrlJsonApi.url) &&
        Objects.equals(this.customFields, seoUrlJsonApi.customFields) &&
        Objects.equals(this.isValid, seoUrlJsonApi.isValid) &&
        Objects.equals(this.createdAt, seoUrlJsonApi.createdAt) &&
        Objects.equals(this.updatedAt, seoUrlJsonApi.updatedAt);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, id, attributes, hashCodeNullable(relationships), links, meta, salesChannelId, languageId, foreignKey, routeName, pathInfo, seoPathInfo, isCanonical, isModified, isDeleted, url, customFields, isValid, createdAt, updatedAt);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SeoUrlJsonApi {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    relationships: ").append(toIndentedString(relationships)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    salesChannelId: ").append(toIndentedString(salesChannelId)).append("\n");
    sb.append("    languageId: ").append(toIndentedString(languageId)).append("\n");
    sb.append("    foreignKey: ").append(toIndentedString(foreignKey)).append("\n");
    sb.append("    routeName: ").append(toIndentedString(routeName)).append("\n");
    sb.append("    pathInfo: ").append(toIndentedString(pathInfo)).append("\n");
    sb.append("    seoPathInfo: ").append(toIndentedString(seoPathInfo)).append("\n");
    sb.append("    isCanonical: ").append(toIndentedString(isCanonical)).append("\n");
    sb.append("    isModified: ").append(toIndentedString(isModified)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    isValid: ").append(toIndentedString(isValid)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

