/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model.core;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Added since version: 6.4.12.0
 */
@JsonPropertyOrder({
  OrderTransactionCaptureRefund.JSON_PROPERTY_ID,
  OrderTransactionCaptureRefund.JSON_PROPERTY_VERSION_ID,
  OrderTransactionCaptureRefund.JSON_PROPERTY_CAPTURE_ID,
  OrderTransactionCaptureRefund.JSON_PROPERTY_CAPTURE_VERSION_ID,
  OrderTransactionCaptureRefund.JSON_PROPERTY_STATE_ID,
  OrderTransactionCaptureRefund.JSON_PROPERTY_EXTERNAL_REFERENCE,
  OrderTransactionCaptureRefund.JSON_PROPERTY_REASON,
  OrderTransactionCaptureRefund.JSON_PROPERTY_AMOUNT,
  OrderTransactionCaptureRefund.JSON_PROPERTY_CUSTOM_FIELDS,
  OrderTransactionCaptureRefund.JSON_PROPERTY_CREATED_AT,
  OrderTransactionCaptureRefund.JSON_PROPERTY_UPDATED_AT,
  OrderTransactionCaptureRefund.JSON_PROPERTY_STATE_MACHINE_STATE,
  OrderTransactionCaptureRefund.JSON_PROPERTY_TRANSACTION_CAPTURE,
  OrderTransactionCaptureRefund.JSON_PROPERTY_POSITIONS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class OrderTransactionCaptureRefund {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_VERSION_ID = "versionId";
  private String versionId;

  public static final String JSON_PROPERTY_CAPTURE_ID = "captureId";
  private String captureId;

  public static final String JSON_PROPERTY_CAPTURE_VERSION_ID = "captureVersionId";
  private String captureVersionId;

  public static final String JSON_PROPERTY_STATE_ID = "stateId";
  private String stateId;

  public static final String JSON_PROPERTY_EXTERNAL_REFERENCE = "externalReference";
  private String externalReference;

  public static final String JSON_PROPERTY_REASON = "reason";
  private String reason;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private OrderShippingCosts amount;

  public static final String JSON_PROPERTY_CUSTOM_FIELDS = "customFields";
  private Object customFields;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_STATE_MACHINE_STATE = "stateMachineState";
  private StateMachineState stateMachineState;

  public static final String JSON_PROPERTY_TRANSACTION_CAPTURE = "transactionCapture";
  private OrderTransactionCapture transactionCapture;

  public static final String JSON_PROPERTY_POSITIONS = "positions";
  private List<OrderTransactionCaptureRefundPosition> positions = new ArrayList<>();

  public OrderTransactionCaptureRefund() {
  }

  @JsonCreator
  public OrderTransactionCaptureRefund(
    @JsonProperty(JSON_PROPERTY_CREATED_AT) OffsetDateTime createdAt, 
    @JsonProperty(JSON_PROPERTY_UPDATED_AT) OffsetDateTime updatedAt
  ) {
    this();
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }

  public OrderTransactionCaptureRefund id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public OrderTransactionCaptureRefund versionId(String versionId) {
    
    this.versionId = versionId;
    return this;
  }

   /**
   * Get versionId
   * @return versionId
  **/
  @JsonProperty(JSON_PROPERTY_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersionId() {
    return versionId;
  }


  @JsonProperty(JSON_PROPERTY_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersionId(String versionId) {
    this.versionId = versionId;
  }


  public OrderTransactionCaptureRefund captureId(String captureId) {
    
    this.captureId = captureId;
    return this;
  }

   /**
   * Get captureId
   * @return captureId
  **/
  @JsonProperty(JSON_PROPERTY_CAPTURE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCaptureId() {
    return captureId;
  }


  @JsonProperty(JSON_PROPERTY_CAPTURE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCaptureId(String captureId) {
    this.captureId = captureId;
  }


  public OrderTransactionCaptureRefund captureVersionId(String captureVersionId) {
    
    this.captureVersionId = captureVersionId;
    return this;
  }

   /**
   * Get captureVersionId
   * @return captureVersionId
  **/
  @JsonProperty(JSON_PROPERTY_CAPTURE_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCaptureVersionId() {
    return captureVersionId;
  }


  @JsonProperty(JSON_PROPERTY_CAPTURE_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCaptureVersionId(String captureVersionId) {
    this.captureVersionId = captureVersionId;
  }


  public OrderTransactionCaptureRefund stateId(String stateId) {
    
    this.stateId = stateId;
    return this;
  }

   /**
   * Get stateId
   * @return stateId
  **/
  @JsonProperty(JSON_PROPERTY_STATE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStateId() {
    return stateId;
  }


  @JsonProperty(JSON_PROPERTY_STATE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStateId(String stateId) {
    this.stateId = stateId;
  }


  public OrderTransactionCaptureRefund externalReference(String externalReference) {
    
    this.externalReference = externalReference;
    return this;
  }

   /**
   * Get externalReference
   * @return externalReference
  **/
  @JsonProperty(JSON_PROPERTY_EXTERNAL_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalReference() {
    return externalReference;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalReference(String externalReference) {
    this.externalReference = externalReference;
  }


  public OrderTransactionCaptureRefund reason(String reason) {
    
    this.reason = reason;
    return this;
  }

   /**
   * Get reason
   * @return reason
  **/
  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReason() {
    return reason;
  }


  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReason(String reason) {
    this.reason = reason;
  }


  public OrderTransactionCaptureRefund amount(OrderShippingCosts amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OrderShippingCosts getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(OrderShippingCosts amount) {
    this.amount = amount;
  }


  public OrderTransactionCaptureRefund customFields(Object customFields) {
    
    this.customFields = customFields;
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getCustomFields() {
    return customFields;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


   /**
   * Get createdAt
   * @return createdAt
  **/
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }




  public OrderTransactionCaptureRefund stateMachineState(StateMachineState stateMachineState) {
    
    this.stateMachineState = stateMachineState;
    return this;
  }

   /**
   * Get stateMachineState
   * @return stateMachineState
  **/
  @JsonProperty(JSON_PROPERTY_STATE_MACHINE_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StateMachineState getStateMachineState() {
    return stateMachineState;
  }


  @JsonProperty(JSON_PROPERTY_STATE_MACHINE_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStateMachineState(StateMachineState stateMachineState) {
    this.stateMachineState = stateMachineState;
  }


  public OrderTransactionCaptureRefund transactionCapture(OrderTransactionCapture transactionCapture) {
    
    this.transactionCapture = transactionCapture;
    return this;
  }

   /**
   * Get transactionCapture
   * @return transactionCapture
  **/
  @JsonProperty(JSON_PROPERTY_TRANSACTION_CAPTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OrderTransactionCapture getTransactionCapture() {
    return transactionCapture;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_CAPTURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionCapture(OrderTransactionCapture transactionCapture) {
    this.transactionCapture = transactionCapture;
  }


  public OrderTransactionCaptureRefund positions(List<OrderTransactionCaptureRefundPosition> positions) {
    
    this.positions = positions;
    return this;
  }

  public OrderTransactionCaptureRefund addPositionsItem(OrderTransactionCaptureRefundPosition positionsItem) {
    if (this.positions == null) {
      this.positions = new ArrayList<>();
    }
    this.positions.add(positionsItem);
    return this;
  }

   /**
   * Get positions
   * @return positions
  **/
  @JsonProperty(JSON_PROPERTY_POSITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<OrderTransactionCaptureRefundPosition> getPositions() {
    return positions;
  }


  @JsonProperty(JSON_PROPERTY_POSITIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPositions(List<OrderTransactionCaptureRefundPosition> positions) {
    this.positions = positions;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderTransactionCaptureRefund orderTransactionCaptureRefund = (OrderTransactionCaptureRefund) o;
    return Objects.equals(this.id, orderTransactionCaptureRefund.id) &&
        Objects.equals(this.versionId, orderTransactionCaptureRefund.versionId) &&
        Objects.equals(this.captureId, orderTransactionCaptureRefund.captureId) &&
        Objects.equals(this.captureVersionId, orderTransactionCaptureRefund.captureVersionId) &&
        Objects.equals(this.stateId, orderTransactionCaptureRefund.stateId) &&
        Objects.equals(this.externalReference, orderTransactionCaptureRefund.externalReference) &&
        Objects.equals(this.reason, orderTransactionCaptureRefund.reason) &&
        Objects.equals(this.amount, orderTransactionCaptureRefund.amount) &&
        Objects.equals(this.customFields, orderTransactionCaptureRefund.customFields) &&
        Objects.equals(this.createdAt, orderTransactionCaptureRefund.createdAt) &&
        Objects.equals(this.updatedAt, orderTransactionCaptureRefund.updatedAt) &&
        Objects.equals(this.stateMachineState, orderTransactionCaptureRefund.stateMachineState) &&
        Objects.equals(this.transactionCapture, orderTransactionCaptureRefund.transactionCapture) &&
        Objects.equals(this.positions, orderTransactionCaptureRefund.positions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, versionId, captureId, captureVersionId, stateId, externalReference, reason, amount, customFields, createdAt, updatedAt, stateMachineState, transactionCapture, positions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderTransactionCaptureRefund {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    versionId: ").append(toIndentedString(versionId)).append("\n");
    sb.append("    captureId: ").append(toIndentedString(captureId)).append("\n");
    sb.append("    captureVersionId: ").append(toIndentedString(captureVersionId)).append("\n");
    sb.append("    stateId: ").append(toIndentedString(stateId)).append("\n");
    sb.append("    externalReference: ").append(toIndentedString(externalReference)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    stateMachineState: ").append(toIndentedString(stateMachineState)).append("\n");
    sb.append("    transactionCapture: ").append(toIndentedString(transactionCapture)).append("\n");
    sb.append("    positions: ").append(toIndentedString(positions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
