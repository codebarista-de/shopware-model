/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model.core;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Added since version: 6.0.0.0
 */
@JsonPropertyOrder({
  PropertyGroup.JSON_PROPERTY_ID,
  PropertyGroup.JSON_PROPERTY_NAME,
  PropertyGroup.JSON_PROPERTY_DESCRIPTION,
  PropertyGroup.JSON_PROPERTY_DISPLAY_TYPE,
  PropertyGroup.JSON_PROPERTY_SORTING_TYPE,
  PropertyGroup.JSON_PROPERTY_FILTERABLE,
  PropertyGroup.JSON_PROPERTY_VISIBLE_ON_PRODUCT_DETAIL_PAGE,
  PropertyGroup.JSON_PROPERTY_POSITION,
  PropertyGroup.JSON_PROPERTY_CUSTOM_FIELDS,
  PropertyGroup.JSON_PROPERTY_CREATED_AT,
  PropertyGroup.JSON_PROPERTY_UPDATED_AT,
  PropertyGroup.JSON_PROPERTY_TRANSLATED,
  PropertyGroup.JSON_PROPERTY_OPTIONS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class PropertyGroup {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_DISPLAY_TYPE = "displayType";
  private String displayType;

  public static final String JSON_PROPERTY_SORTING_TYPE = "sortingType";
  private String sortingType;

  public static final String JSON_PROPERTY_FILTERABLE = "filterable";
  private Boolean filterable;

  public static final String JSON_PROPERTY_VISIBLE_ON_PRODUCT_DETAIL_PAGE = "visibleOnProductDetailPage";
  private Boolean visibleOnProductDetailPage;

  public static final String JSON_PROPERTY_POSITION = "position";
  private Long position;

  public static final String JSON_PROPERTY_CUSTOM_FIELDS = "customFields";
  private Object customFields;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_TRANSLATED = "translated";
  private Object translated;

  public static final String JSON_PROPERTY_OPTIONS = "options";
  private List<PropertyGroupOption> options = new ArrayList<>();

  public PropertyGroup() {
  }

  @JsonCreator
  public PropertyGroup(
    @JsonProperty(JSON_PROPERTY_CREATED_AT) OffsetDateTime createdAt, 
    @JsonProperty(JSON_PROPERTY_UPDATED_AT) OffsetDateTime updatedAt
  ) {
    this();
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }

  public PropertyGroup id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public PropertyGroup name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public PropertyGroup description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public PropertyGroup displayType(String displayType) {
    
    this.displayType = displayType;
    return this;
  }

   /**
   * Get displayType
   * @return displayType
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DISPLAY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDisplayType() {
    return displayType;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisplayType(String displayType) {
    this.displayType = displayType;
  }


  public PropertyGroup sortingType(String sortingType) {
    
    this.sortingType = sortingType;
    return this;
  }

   /**
   * Get sortingType
   * @return sortingType
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SORTING_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSortingType() {
    return sortingType;
  }


  @JsonProperty(JSON_PROPERTY_SORTING_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSortingType(String sortingType) {
    this.sortingType = sortingType;
  }


  public PropertyGroup filterable(Boolean filterable) {
    
    this.filterable = filterable;
    return this;
  }

   /**
   * Get filterable
   * @return filterable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FILTERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getFilterable() {
    return filterable;
  }


  @JsonProperty(JSON_PROPERTY_FILTERABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilterable(Boolean filterable) {
    this.filterable = filterable;
  }


  public PropertyGroup visibleOnProductDetailPage(Boolean visibleOnProductDetailPage) {
    
    this.visibleOnProductDetailPage = visibleOnProductDetailPage;
    return this;
  }

   /**
   * Get visibleOnProductDetailPage
   * @return visibleOnProductDetailPage
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VISIBLE_ON_PRODUCT_DETAIL_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getVisibleOnProductDetailPage() {
    return visibleOnProductDetailPage;
  }


  @JsonProperty(JSON_PROPERTY_VISIBLE_ON_PRODUCT_DETAIL_PAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVisibleOnProductDetailPage(Boolean visibleOnProductDetailPage) {
    this.visibleOnProductDetailPage = visibleOnProductDetailPage;
  }


  public PropertyGroup position(Long position) {
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getPosition() {
    return position;
  }


  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPosition(Long position) {
    this.position = position;
  }


  public PropertyGroup customFields(Object customFields) {
    
    this.customFields = customFields;
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getCustomFields() {
    return customFields;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


   /**
   * Get createdAt
   * @return createdAt
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }




  public PropertyGroup translated(Object translated) {
    
    this.translated = translated;
    return this;
  }

   /**
   * Get translated
   * @return translated
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSLATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getTranslated() {
    return translated;
  }


  @JsonProperty(JSON_PROPERTY_TRANSLATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTranslated(Object translated) {
    this.translated = translated;
  }


  public PropertyGroup options(List<PropertyGroupOption> options) {
    
    this.options = options;
    return this;
  }

  public PropertyGroup addOptionsItem(PropertyGroupOption optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PropertyGroupOption> getOptions() {
    return options;
  }


  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptions(List<PropertyGroupOption> options) {
    this.options = options;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PropertyGroup propertyGroup = (PropertyGroup) o;
    return Objects.equals(this.id, propertyGroup.id) &&
        Objects.equals(this.name, propertyGroup.name) &&
        Objects.equals(this.description, propertyGroup.description) &&
        Objects.equals(this.displayType, propertyGroup.displayType) &&
        Objects.equals(this.sortingType, propertyGroup.sortingType) &&
        Objects.equals(this.filterable, propertyGroup.filterable) &&
        Objects.equals(this.visibleOnProductDetailPage, propertyGroup.visibleOnProductDetailPage) &&
        Objects.equals(this.position, propertyGroup.position) &&
        Objects.equals(this.customFields, propertyGroup.customFields) &&
        Objects.equals(this.createdAt, propertyGroup.createdAt) &&
        Objects.equals(this.updatedAt, propertyGroup.updatedAt) &&
        Objects.equals(this.translated, propertyGroup.translated) &&
        Objects.equals(this.options, propertyGroup.options);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, displayType, sortingType, filterable, visibleOnProductDetailPage, position, customFields, createdAt, updatedAt, translated, options);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PropertyGroup {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayType: ").append(toIndentedString(displayType)).append("\n");
    sb.append("    sortingType: ").append(toIndentedString(sortingType)).append("\n");
    sb.append("    filterable: ").append(toIndentedString(filterable)).append("\n");
    sb.append("    visibleOnProductDetailPage: ").append(toIndentedString(visibleOnProductDetailPage)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    translated: ").append(toIndentedString(translated)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

