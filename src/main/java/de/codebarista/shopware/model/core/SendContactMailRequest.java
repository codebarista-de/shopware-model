/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model.core;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.Objects;

/**
 * SendContactMailRequest
 */
@JsonPropertyOrder({
  SendContactMailRequest.JSON_PROPERTY_SALUTATION_ID,
  SendContactMailRequest.JSON_PROPERTY_FIRST_NAME,
  SendContactMailRequest.JSON_PROPERTY_LAST_NAME,
  SendContactMailRequest.JSON_PROPERTY_EMAIL,
  SendContactMailRequest.JSON_PROPERTY_PHONE,
  SendContactMailRequest.JSON_PROPERTY_SUBJECT,
  SendContactMailRequest.JSON_PROPERTY_COMMENT,
  SendContactMailRequest.JSON_PROPERTY_NAVIGATION_ID,
  SendContactMailRequest.JSON_PROPERTY_SLOT_ID,
  SendContactMailRequest.JSON_PROPERTY_CMS_PAGE_TYPE,
  SendContactMailRequest.JSON_PROPERTY_ENTITY_NAME
})
@JsonTypeName("sendContactMail_request")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class SendContactMailRequest {
  public static final String JSON_PROPERTY_SALUTATION_ID = "salutationId";
  private String salutationId;

  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";
  private String firstName;

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";
  private String lastName;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_PHONE = "phone";
  private String phone;

  public static final String JSON_PROPERTY_SUBJECT = "subject";
  private String subject;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private String comment;

  public static final String JSON_PROPERTY_NAVIGATION_ID = "navigationId";
  private String navigationId;

  public static final String JSON_PROPERTY_SLOT_ID = "slotId";
  private String slotId;

  public static final String JSON_PROPERTY_CMS_PAGE_TYPE = "cmsPageType";
  private String cmsPageType;

  public static final String JSON_PROPERTY_ENTITY_NAME = "entityName";
  private String entityName;

  public SendContactMailRequest() {
  }

  public SendContactMailRequest salutationId(String salutationId) {
    
    this.salutationId = salutationId;
    return this;
  }

   /**
   * Identifier of the salutation. Use &#x60;/api/salutation&#x60; endpoint to fetch possible values.
   * @return salutationId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SALUTATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSalutationId() {
    return salutationId;
  }


  @JsonProperty(JSON_PROPERTY_SALUTATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSalutationId(String salutationId) {
    this.salutationId = salutationId;
  }


  public SendContactMailRequest firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Firstname. This field may be required depending on the system settings.
   * @return firstName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public SendContactMailRequest lastName(String lastName) {
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Lastname. This field may be required depending on the system settings.
   * @return lastName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public SendContactMailRequest email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Email address
   * @return email
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmail(String email) {
    this.email = email;
  }


  public SendContactMailRequest phone(String phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * Phone. This field may be required depending on the system settings.
   * @return phone
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhone() {
    return phone;
  }


  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhone(String phone) {
    this.phone = phone;
  }


  public SendContactMailRequest subject(String subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * The subject of the contact form.
   * @return subject
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSubject() {
    return subject;
  }


  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubject(String subject) {
    this.subject = subject;
  }


  public SendContactMailRequest comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * The message of the contact form
   * @return comment
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getComment() {
    return comment;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setComment(String comment) {
    this.comment = comment;
  }


  public SendContactMailRequest navigationId(String navigationId) {
    
    this.navigationId = navigationId;
    return this;
  }

   /**
   * Identifier of the navigation page. Can be used to override the configuration. Take a look at the settings of a category containing a concact form in the administration.
   * @return navigationId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAVIGATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNavigationId() {
    return navigationId;
  }


  @JsonProperty(JSON_PROPERTY_NAVIGATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNavigationId(String navigationId) {
    this.navigationId = navigationId;
  }


  public SendContactMailRequest slotId(String slotId) {
    
    this.slotId = slotId;
    return this;
  }

   /**
   * Identifier of the cms element
   * @return slotId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SLOT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSlotId() {
    return slotId;
  }


  @JsonProperty(JSON_PROPERTY_SLOT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSlotId(String slotId) {
    this.slotId = slotId;
  }


  public SendContactMailRequest cmsPageType(String cmsPageType) {
    
    this.cmsPageType = cmsPageType;
    return this;
  }

   /**
   * Type of the content management page
   * @return cmsPageType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CMS_PAGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCmsPageType() {
    return cmsPageType;
  }


  @JsonProperty(JSON_PROPERTY_CMS_PAGE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCmsPageType(String cmsPageType) {
    this.cmsPageType = cmsPageType;
  }


  public SendContactMailRequest entityName(String entityName) {
    
    this.entityName = entityName;
    return this;
  }

   /**
   * Entity name for slot config
   * @return entityName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENTITY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEntityName() {
    return entityName;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEntityName(String entityName) {
    this.entityName = entityName;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SendContactMailRequest sendContactMailRequest = (SendContactMailRequest) o;
    return Objects.equals(this.salutationId, sendContactMailRequest.salutationId) &&
        Objects.equals(this.firstName, sendContactMailRequest.firstName) &&
        Objects.equals(this.lastName, sendContactMailRequest.lastName) &&
        Objects.equals(this.email, sendContactMailRequest.email) &&
        Objects.equals(this.phone, sendContactMailRequest.phone) &&
        Objects.equals(this.subject, sendContactMailRequest.subject) &&
        Objects.equals(this.comment, sendContactMailRequest.comment) &&
        Objects.equals(this.navigationId, sendContactMailRequest.navigationId) &&
        Objects.equals(this.slotId, sendContactMailRequest.slotId) &&
        Objects.equals(this.cmsPageType, sendContactMailRequest.cmsPageType) &&
        Objects.equals(this.entityName, sendContactMailRequest.entityName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(salutationId, firstName, lastName, email, phone, subject, comment, navigationId, slotId, cmsPageType, entityName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SendContactMailRequest {\n");
    sb.append("    salutationId: ").append(toIndentedString(salutationId)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    navigationId: ").append(toIndentedString(navigationId)).append("\n");
    sb.append("    slotId: ").append(toIndentedString(slotId)).append("\n");
    sb.append("    cmsPageType: ").append(toIndentedString(cmsPageType)).append("\n");
    sb.append("    entityName: ").append(toIndentedString(entityName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

