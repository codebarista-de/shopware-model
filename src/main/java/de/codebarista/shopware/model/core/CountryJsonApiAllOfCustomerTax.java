/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model.core;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.Objects;

/**
 * CountryJsonApiAllOfCustomerTax
 */
@JsonPropertyOrder({
  CountryJsonApiAllOfCustomerTax.JSON_PROPERTY_ENABLED,
  CountryJsonApiAllOfCustomerTax.JSON_PROPERTY_CURRENCY_ID,
  CountryJsonApiAllOfCustomerTax.JSON_PROPERTY_AMOUNT
})
@JsonTypeName("CountryJsonApi_allOf_customerTax")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class CountryJsonApiAllOfCustomerTax {
  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_CURRENCY_ID = "currencyId";
  private String currencyId;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private Float amount;

  public CountryJsonApiAllOfCustomerTax() {
  }

  public CountryJsonApiAllOfCustomerTax enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public CountryJsonApiAllOfCustomerTax currencyId(String currencyId) {
    
    this.currencyId = currencyId;
    return this;
  }

   /**
   * Get currencyId
   * @return currencyId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENCY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCurrencyId() {
    return currencyId;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrencyId(String currencyId) {
    this.currencyId = currencyId;
  }


  public CountryJsonApiAllOfCustomerTax amount(Float amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Float getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(Float amount) {
    this.amount = amount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CountryJsonApiAllOfCustomerTax countryJsonApiAllOfCustomerTax = (CountryJsonApiAllOfCustomerTax) o;
    return Objects.equals(this.enabled, countryJsonApiAllOfCustomerTax.enabled) &&
        Objects.equals(this.currencyId, countryJsonApiAllOfCustomerTax.currencyId) &&
        Objects.equals(this.amount, countryJsonApiAllOfCustomerTax.amount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, currencyId, amount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CountryJsonApiAllOfCustomerTax {\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

