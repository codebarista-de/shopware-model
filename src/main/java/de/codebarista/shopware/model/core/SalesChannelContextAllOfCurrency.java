/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model.core;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.util.Objects;

/**
 * Currency associated with the current user
 */
@JsonPropertyOrder({
  SalesChannelContextAllOfCurrency.JSON_PROPERTY_ISO_CODE,
  SalesChannelContextAllOfCurrency.JSON_PROPERTY_FACTOR,
  SalesChannelContextAllOfCurrency.JSON_PROPERTY_SYMBOL,
  SalesChannelContextAllOfCurrency.JSON_PROPERTY_SHORT_NAME,
  SalesChannelContextAllOfCurrency.JSON_PROPERTY_NAME,
  SalesChannelContextAllOfCurrency.JSON_PROPERTY_POSITION,
  SalesChannelContextAllOfCurrency.JSON_PROPERTY_DECIMAL_PRECISION,
  SalesChannelContextAllOfCurrency.JSON_PROPERTY_IS_SYSTEM_DEFAULT
})
@JsonTypeName("SalesChannelContext_allOf_currency")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class SalesChannelContextAllOfCurrency {
  public static final String JSON_PROPERTY_ISO_CODE = "isoCode";
  private String isoCode;

  public static final String JSON_PROPERTY_FACTOR = "factor";
  private Integer factor;

  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  private String symbol;

  public static final String JSON_PROPERTY_SHORT_NAME = "shortName";
  private String shortName;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_POSITION = "position";
  private Integer position;

  public static final String JSON_PROPERTY_DECIMAL_PRECISION = "decimalPrecision";
  private Integer decimalPrecision;

  public static final String JSON_PROPERTY_IS_SYSTEM_DEFAULT = "isSystemDefault";
  private Boolean isSystemDefault;

  public SalesChannelContextAllOfCurrency() {
  }

  public SalesChannelContextAllOfCurrency isoCode(String isoCode) {
    
    this.isoCode = isoCode;
    return this;
  }

   /**
   * Get isoCode
   * @return isoCode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ISO_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIsoCode() {
    return isoCode;
  }


  @JsonProperty(JSON_PROPERTY_ISO_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsoCode(String isoCode) {
    this.isoCode = isoCode;
  }


  public SalesChannelContextAllOfCurrency factor(Integer factor) {
    
    this.factor = factor;
    return this;
  }

   /**
   * Get factor
   * @return factor
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FACTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFactor() {
    return factor;
  }


  @JsonProperty(JSON_PROPERTY_FACTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFactor(Integer factor) {
    this.factor = factor;
  }


  public SalesChannelContextAllOfCurrency symbol(String symbol) {
    
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }


  public SalesChannelContextAllOfCurrency shortName(String shortName) {
    
    this.shortName = shortName;
    return this;
  }

   /**
   * Get shortName
   * @return shortName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShortName() {
    return shortName;
  }


  @JsonProperty(JSON_PROPERTY_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShortName(String shortName) {
    this.shortName = shortName;
  }


  public SalesChannelContextAllOfCurrency name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public SalesChannelContextAllOfCurrency position(Integer position) {
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPosition() {
    return position;
  }


  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPosition(Integer position) {
    this.position = position;
  }


  public SalesChannelContextAllOfCurrency decimalPrecision(Integer decimalPrecision) {
    
    this.decimalPrecision = decimalPrecision;
    return this;
  }

   /**
   * Get decimalPrecision
   * @return decimalPrecision
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DECIMAL_PRECISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDecimalPrecision() {
    return decimalPrecision;
  }


  @JsonProperty(JSON_PROPERTY_DECIMAL_PRECISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDecimalPrecision(Integer decimalPrecision) {
    this.decimalPrecision = decimalPrecision;
  }


  public SalesChannelContextAllOfCurrency isSystemDefault(Boolean isSystemDefault) {
    
    this.isSystemDefault = isSystemDefault;
    return this;
  }

   /**
   * Get isSystemDefault
   * @return isSystemDefault
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_SYSTEM_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsSystemDefault() {
    return isSystemDefault;
  }


  @JsonProperty(JSON_PROPERTY_IS_SYSTEM_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsSystemDefault(Boolean isSystemDefault) {
    this.isSystemDefault = isSystemDefault;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesChannelContextAllOfCurrency salesChannelContextAllOfCurrency = (SalesChannelContextAllOfCurrency) o;
    return Objects.equals(this.isoCode, salesChannelContextAllOfCurrency.isoCode) &&
        Objects.equals(this.factor, salesChannelContextAllOfCurrency.factor) &&
        Objects.equals(this.symbol, salesChannelContextAllOfCurrency.symbol) &&
        Objects.equals(this.shortName, salesChannelContextAllOfCurrency.shortName) &&
        Objects.equals(this.name, salesChannelContextAllOfCurrency.name) &&
        Objects.equals(this.position, salesChannelContextAllOfCurrency.position) &&
        Objects.equals(this.decimalPrecision, salesChannelContextAllOfCurrency.decimalPrecision) &&
        Objects.equals(this.isSystemDefault, salesChannelContextAllOfCurrency.isSystemDefault);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isoCode, factor, symbol, shortName, name, position, decimalPrecision, isSystemDefault);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesChannelContextAllOfCurrency {\n");
    sb.append("    isoCode: ").append(toIndentedString(isoCode)).append("\n");
    sb.append("    factor: ").append(toIndentedString(factor)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    decimalPrecision: ").append(toIndentedString(decimalPrecision)).append("\n");
    sb.append("    isSystemDefault: ").append(toIndentedString(isSystemDefault)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

