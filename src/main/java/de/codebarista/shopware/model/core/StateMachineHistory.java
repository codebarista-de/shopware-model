/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model.core;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.time.OffsetDateTime;
import java.util.Objects;

/**
 * Added since version: 6.0.0.0
 */
@JsonPropertyOrder({
  StateMachineHistory.JSON_PROPERTY_ID,
  StateMachineHistory.JSON_PROPERTY_CREATED_AT,
  StateMachineHistory.JSON_PROPERTY_UPDATED_AT,
  StateMachineHistory.JSON_PROPERTY_FROM_STATE_MACHINE_STATE,
  StateMachineHistory.JSON_PROPERTY_TO_STATE_MACHINE_STATE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class StateMachineHistory {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_FROM_STATE_MACHINE_STATE = "fromStateMachineState";
  private StateMachineState fromStateMachineState;

  public static final String JSON_PROPERTY_TO_STATE_MACHINE_STATE = "toStateMachineState";
  private StateMachineState toStateMachineState;

  public StateMachineHistory() {
  }

  @JsonCreator
  public StateMachineHistory(
    @JsonProperty(JSON_PROPERTY_CREATED_AT) OffsetDateTime createdAt, 
    @JsonProperty(JSON_PROPERTY_UPDATED_AT) OffsetDateTime updatedAt
  ) {
    this();
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }

  public StateMachineHistory id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


   /**
   * Get createdAt
   * @return createdAt
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }




  public StateMachineHistory fromStateMachineState(StateMachineState fromStateMachineState) {
    
    this.fromStateMachineState = fromStateMachineState;
    return this;
  }

   /**
   * Get fromStateMachineState
   * @return fromStateMachineState
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROM_STATE_MACHINE_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StateMachineState getFromStateMachineState() {
    return fromStateMachineState;
  }


  @JsonProperty(JSON_PROPERTY_FROM_STATE_MACHINE_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromStateMachineState(StateMachineState fromStateMachineState) {
    this.fromStateMachineState = fromStateMachineState;
  }


  public StateMachineHistory toStateMachineState(StateMachineState toStateMachineState) {
    
    this.toStateMachineState = toStateMachineState;
    return this;
  }

   /**
   * Get toStateMachineState
   * @return toStateMachineState
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TO_STATE_MACHINE_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StateMachineState getToStateMachineState() {
    return toStateMachineState;
  }


  @JsonProperty(JSON_PROPERTY_TO_STATE_MACHINE_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToStateMachineState(StateMachineState toStateMachineState) {
    this.toStateMachineState = toStateMachineState;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StateMachineHistory stateMachineHistory = (StateMachineHistory) o;
    return Objects.equals(this.id, stateMachineHistory.id) &&
        Objects.equals(this.createdAt, stateMachineHistory.createdAt) &&
        Objects.equals(this.updatedAt, stateMachineHistory.updatedAt) &&
        Objects.equals(this.fromStateMachineState, stateMachineHistory.fromStateMachineState) &&
        Objects.equals(this.toStateMachineState, stateMachineHistory.toStateMachineState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdAt, updatedAt, fromStateMachineState, toStateMachineState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StateMachineHistory {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    fromStateMachineState: ").append(toIndentedString(fromStateMachineState)).append("\n");
    sb.append("    toStateMachineState: ").append(toIndentedString(toStateMachineState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

