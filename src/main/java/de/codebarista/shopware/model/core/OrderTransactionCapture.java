/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model.core;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Added since version: 6.4.12.0
 */
@JsonPropertyOrder({
  OrderTransactionCapture.JSON_PROPERTY_ID,
  OrderTransactionCapture.JSON_PROPERTY_VERSION_ID,
  OrderTransactionCapture.JSON_PROPERTY_ORDER_TRANSACTION_ID,
  OrderTransactionCapture.JSON_PROPERTY_ORDER_TRANSACTION_VERSION_ID,
  OrderTransactionCapture.JSON_PROPERTY_STATE_ID,
  OrderTransactionCapture.JSON_PROPERTY_EXTERNAL_REFERENCE,
  OrderTransactionCapture.JSON_PROPERTY_AMOUNT,
  OrderTransactionCapture.JSON_PROPERTY_CUSTOM_FIELDS,
  OrderTransactionCapture.JSON_PROPERTY_CREATED_AT,
  OrderTransactionCapture.JSON_PROPERTY_UPDATED_AT,
  OrderTransactionCapture.JSON_PROPERTY_STATE_MACHINE_STATE,
  OrderTransactionCapture.JSON_PROPERTY_TRANSACTION,
  OrderTransactionCapture.JSON_PROPERTY_REFUNDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class OrderTransactionCapture {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_VERSION_ID = "versionId";
  private String versionId;

  public static final String JSON_PROPERTY_ORDER_TRANSACTION_ID = "orderTransactionId";
  private String orderTransactionId;

  public static final String JSON_PROPERTY_ORDER_TRANSACTION_VERSION_ID = "orderTransactionVersionId";
  private String orderTransactionVersionId;

  public static final String JSON_PROPERTY_STATE_ID = "stateId";
  private String stateId;

  public static final String JSON_PROPERTY_EXTERNAL_REFERENCE = "externalReference";
  private String externalReference;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  private OrderShippingCosts amount;

  public static final String JSON_PROPERTY_CUSTOM_FIELDS = "customFields";
  private Object customFields;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_STATE_MACHINE_STATE = "stateMachineState";
  private StateMachineState stateMachineState;

  public static final String JSON_PROPERTY_TRANSACTION = "transaction";
  private OrderTransaction transaction;

  public static final String JSON_PROPERTY_REFUNDS = "refunds";
  private List<OrderTransactionCaptureRefund> refunds = new ArrayList<>();

  public OrderTransactionCapture() {
  }

  @JsonCreator
  public OrderTransactionCapture(
    @JsonProperty(JSON_PROPERTY_CREATED_AT) OffsetDateTime createdAt, 
    @JsonProperty(JSON_PROPERTY_UPDATED_AT) OffsetDateTime updatedAt
  ) {
    this();
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }

  public OrderTransactionCapture id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public OrderTransactionCapture versionId(String versionId) {
    
    this.versionId = versionId;
    return this;
  }

   /**
   * Get versionId
   * @return versionId
  **/
  @JsonProperty(JSON_PROPERTY_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersionId() {
    return versionId;
  }


  @JsonProperty(JSON_PROPERTY_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersionId(String versionId) {
    this.versionId = versionId;
  }


  public OrderTransactionCapture orderTransactionId(String orderTransactionId) {
    
    this.orderTransactionId = orderTransactionId;
    return this;
  }

   /**
   * Get orderTransactionId
   * @return orderTransactionId
  **/
  @JsonProperty(JSON_PROPERTY_ORDER_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOrderTransactionId() {
    return orderTransactionId;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrderTransactionId(String orderTransactionId) {
    this.orderTransactionId = orderTransactionId;
  }


  public OrderTransactionCapture orderTransactionVersionId(String orderTransactionVersionId) {
    
    this.orderTransactionVersionId = orderTransactionVersionId;
    return this;
  }

   /**
   * Get orderTransactionVersionId
   * @return orderTransactionVersionId
  **/
  @JsonProperty(JSON_PROPERTY_ORDER_TRANSACTION_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrderTransactionVersionId() {
    return orderTransactionVersionId;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_TRANSACTION_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderTransactionVersionId(String orderTransactionVersionId) {
    this.orderTransactionVersionId = orderTransactionVersionId;
  }


  public OrderTransactionCapture stateId(String stateId) {
    
    this.stateId = stateId;
    return this;
  }

   /**
   * Get stateId
   * @return stateId
  **/
  @JsonProperty(JSON_PROPERTY_STATE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStateId() {
    return stateId;
  }


  @JsonProperty(JSON_PROPERTY_STATE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStateId(String stateId) {
    this.stateId = stateId;
  }


  public OrderTransactionCapture externalReference(String externalReference) {
    
    this.externalReference = externalReference;
    return this;
  }

   /**
   * Get externalReference
   * @return externalReference
  **/
  @JsonProperty(JSON_PROPERTY_EXTERNAL_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalReference() {
    return externalReference;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalReference(String externalReference) {
    this.externalReference = externalReference;
  }


  public OrderTransactionCapture amount(OrderShippingCosts amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OrderShippingCosts getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(OrderShippingCosts amount) {
    this.amount = amount;
  }


  public OrderTransactionCapture customFields(Object customFields) {
    
    this.customFields = customFields;
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getCustomFields() {
    return customFields;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


   /**
   * Get createdAt
   * @return createdAt
  **/
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }




  public OrderTransactionCapture stateMachineState(StateMachineState stateMachineState) {
    
    this.stateMachineState = stateMachineState;
    return this;
  }

   /**
   * Get stateMachineState
   * @return stateMachineState
  **/
  @JsonProperty(JSON_PROPERTY_STATE_MACHINE_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StateMachineState getStateMachineState() {
    return stateMachineState;
  }


  @JsonProperty(JSON_PROPERTY_STATE_MACHINE_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStateMachineState(StateMachineState stateMachineState) {
    this.stateMachineState = stateMachineState;
  }


  public OrderTransactionCapture transaction(OrderTransaction transaction) {
    
    this.transaction = transaction;
    return this;
  }

   /**
   * Get transaction
   * @return transaction
  **/
  @JsonProperty(JSON_PROPERTY_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OrderTransaction getTransaction() {
    return transaction;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransaction(OrderTransaction transaction) {
    this.transaction = transaction;
  }


  public OrderTransactionCapture refunds(List<OrderTransactionCaptureRefund> refunds) {
    
    this.refunds = refunds;
    return this;
  }

  public OrderTransactionCapture addRefundsItem(OrderTransactionCaptureRefund refundsItem) {
    if (this.refunds == null) {
      this.refunds = new ArrayList<>();
    }
    this.refunds.add(refundsItem);
    return this;
  }

   /**
   * Get refunds
   * @return refunds
  **/
  @JsonProperty(JSON_PROPERTY_REFUNDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<OrderTransactionCaptureRefund> getRefunds() {
    return refunds;
  }


  @JsonProperty(JSON_PROPERTY_REFUNDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRefunds(List<OrderTransactionCaptureRefund> refunds) {
    this.refunds = refunds;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderTransactionCapture orderTransactionCapture = (OrderTransactionCapture) o;
    return Objects.equals(this.id, orderTransactionCapture.id) &&
        Objects.equals(this.versionId, orderTransactionCapture.versionId) &&
        Objects.equals(this.orderTransactionId, orderTransactionCapture.orderTransactionId) &&
        Objects.equals(this.orderTransactionVersionId, orderTransactionCapture.orderTransactionVersionId) &&
        Objects.equals(this.stateId, orderTransactionCapture.stateId) &&
        Objects.equals(this.externalReference, orderTransactionCapture.externalReference) &&
        Objects.equals(this.amount, orderTransactionCapture.amount) &&
        Objects.equals(this.customFields, orderTransactionCapture.customFields) &&
        Objects.equals(this.createdAt, orderTransactionCapture.createdAt) &&
        Objects.equals(this.updatedAt, orderTransactionCapture.updatedAt) &&
        Objects.equals(this.stateMachineState, orderTransactionCapture.stateMachineState) &&
        Objects.equals(this.transaction, orderTransactionCapture.transaction) &&
        Objects.equals(this.refunds, orderTransactionCapture.refunds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, versionId, orderTransactionId, orderTransactionVersionId, stateId, externalReference, amount, customFields, createdAt, updatedAt, stateMachineState, transaction, refunds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderTransactionCapture {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    versionId: ").append(toIndentedString(versionId)).append("\n");
    sb.append("    orderTransactionId: ").append(toIndentedString(orderTransactionId)).append("\n");
    sb.append("    orderTransactionVersionId: ").append(toIndentedString(orderTransactionVersionId)).append("\n");
    sb.append("    stateId: ").append(toIndentedString(stateId)).append("\n");
    sb.append("    externalReference: ").append(toIndentedString(externalReference)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    stateMachineState: ").append(toIndentedString(stateMachineState)).append("\n");
    sb.append("    transaction: ").append(toIndentedString(transaction)).append("\n");
    sb.append("    refunds: ").append(toIndentedString(refunds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
