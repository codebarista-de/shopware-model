/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.time.OffsetDateTime;
import java.util.Objects;

/**
 * Added since version: 6.0.0.0
 */
@JsonPropertyOrder({
  CmsSlot.JSON_PROPERTY_ID,
  CmsSlot.JSON_PROPERTY_VERSION_ID,
  CmsSlot.JSON_PROPERTY_TYPE,
  CmsSlot.JSON_PROPERTY_SLOT,
  CmsSlot.JSON_PROPERTY_LOCKED,
  CmsSlot.JSON_PROPERTY_CONFIG,
  CmsSlot.JSON_PROPERTY_CUSTOM_FIELDS,
  CmsSlot.JSON_PROPERTY_DATA,
  CmsSlot.JSON_PROPERTY_BLOCK_ID,
  CmsSlot.JSON_PROPERTY_FIELD_CONFIG,
  CmsSlot.JSON_PROPERTY_CMS_BLOCK_VERSION_ID,
  CmsSlot.JSON_PROPERTY_CREATED_AT,
  CmsSlot.JSON_PROPERTY_UPDATED_AT,
  CmsSlot.JSON_PROPERTY_TRANSLATED,
  CmsSlot.JSON_PROPERTY_BLOCK
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class CmsSlot {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_VERSION_ID = "versionId";
  private String versionId;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_SLOT = "slot";
  private String slot;

  public static final String JSON_PROPERTY_LOCKED = "locked";
  private Boolean locked;

  public static final String JSON_PROPERTY_CONFIG = "config";
  private Object config;

  public static final String JSON_PROPERTY_CUSTOM_FIELDS = "customFields";
  private Object customFields;

  public static final String JSON_PROPERTY_DATA = "data";
  private Object data;

  public static final String JSON_PROPERTY_BLOCK_ID = "blockId";
  private String blockId;

  public static final String JSON_PROPERTY_FIELD_CONFIG = "fieldConfig";
  private Object fieldConfig;

  public static final String JSON_PROPERTY_CMS_BLOCK_VERSION_ID = "cmsBlockVersionId";
  private String cmsBlockVersionId;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_TRANSLATED = "translated";
  private Object translated;

  public static final String JSON_PROPERTY_BLOCK = "block";
  private CmsBlock block;

  public CmsSlot() {
  }

  @JsonCreator
  public CmsSlot(
    @JsonProperty(JSON_PROPERTY_DATA) Object data, 
    @JsonProperty(JSON_PROPERTY_CREATED_AT) OffsetDateTime createdAt, 
    @JsonProperty(JSON_PROPERTY_UPDATED_AT) OffsetDateTime updatedAt
  ) {
    this();
    this.data = data;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }

  public CmsSlot id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public CmsSlot versionId(String versionId) {
    
    this.versionId = versionId;
    return this;
  }

   /**
   * Get versionId
   * @return versionId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersionId() {
    return versionId;
  }


  @JsonProperty(JSON_PROPERTY_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersionId(String versionId) {
    this.versionId = versionId;
  }


  public CmsSlot type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public CmsSlot slot(String slot) {
    
    this.slot = slot;
    return this;
  }

   /**
   * Get slot
   * @return slot
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SLOT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSlot() {
    return slot;
  }


  @JsonProperty(JSON_PROPERTY_SLOT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSlot(String slot) {
    this.slot = slot;
  }


  public CmsSlot locked(Boolean locked) {
    
    this.locked = locked;
    return this;
  }

   /**
   * Get locked
   * @return locked
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLocked() {
    return locked;
  }


  @JsonProperty(JSON_PROPERTY_LOCKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocked(Boolean locked) {
    this.locked = locked;
  }


  public CmsSlot config(Object config) {
    
    this.config = config;
    return this;
  }

   /**
   * Get config
   * @return config
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getConfig() {
    return config;
  }


  @JsonProperty(JSON_PROPERTY_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfig(Object config) {
    this.config = config;
  }


  public CmsSlot customFields(Object customFields) {
    
    this.customFields = customFields;
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getCustomFields() {
    return customFields;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


   /**
   * Get data
   * @return data
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getData() {
    return data;
  }




  public CmsSlot blockId(String blockId) {
    
    this.blockId = blockId;
    return this;
  }

   /**
   * Get blockId
   * @return blockId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BLOCK_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBlockId() {
    return blockId;
  }


  @JsonProperty(JSON_PROPERTY_BLOCK_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBlockId(String blockId) {
    this.blockId = blockId;
  }


  public CmsSlot fieldConfig(Object fieldConfig) {
    
    this.fieldConfig = fieldConfig;
    return this;
  }

   /**
   * Get fieldConfig
   * @return fieldConfig
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIELD_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getFieldConfig() {
    return fieldConfig;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFieldConfig(Object fieldConfig) {
    this.fieldConfig = fieldConfig;
  }


  public CmsSlot cmsBlockVersionId(String cmsBlockVersionId) {
    
    this.cmsBlockVersionId = cmsBlockVersionId;
    return this;
  }

   /**
   * Get cmsBlockVersionId
   * @return cmsBlockVersionId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CMS_BLOCK_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCmsBlockVersionId() {
    return cmsBlockVersionId;
  }


  @JsonProperty(JSON_PROPERTY_CMS_BLOCK_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCmsBlockVersionId(String cmsBlockVersionId) {
    this.cmsBlockVersionId = cmsBlockVersionId;
  }


   /**
   * Get createdAt
   * @return createdAt
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }




  public CmsSlot translated(Object translated) {
    
    this.translated = translated;
    return this;
  }

   /**
   * Get translated
   * @return translated
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSLATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getTranslated() {
    return translated;
  }


  @JsonProperty(JSON_PROPERTY_TRANSLATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTranslated(Object translated) {
    this.translated = translated;
  }


  public CmsSlot block(CmsBlock block) {
    
    this.block = block;
    return this;
  }

   /**
   * Get block
   * @return block
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CmsBlock getBlock() {
    return block;
  }


  @JsonProperty(JSON_PROPERTY_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBlock(CmsBlock block) {
    this.block = block;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CmsSlot cmsSlot = (CmsSlot) o;
    return Objects.equals(this.id, cmsSlot.id) &&
        Objects.equals(this.versionId, cmsSlot.versionId) &&
        Objects.equals(this.type, cmsSlot.type) &&
        Objects.equals(this.slot, cmsSlot.slot) &&
        Objects.equals(this.locked, cmsSlot.locked) &&
        Objects.equals(this.config, cmsSlot.config) &&
        Objects.equals(this.customFields, cmsSlot.customFields) &&
        Objects.equals(this.data, cmsSlot.data) &&
        Objects.equals(this.blockId, cmsSlot.blockId) &&
        Objects.equals(this.fieldConfig, cmsSlot.fieldConfig) &&
        Objects.equals(this.cmsBlockVersionId, cmsSlot.cmsBlockVersionId) &&
        Objects.equals(this.createdAt, cmsSlot.createdAt) &&
        Objects.equals(this.updatedAt, cmsSlot.updatedAt) &&
        Objects.equals(this.translated, cmsSlot.translated) &&
        Objects.equals(this.block, cmsSlot.block);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, versionId, type, slot, locked, config, customFields, data, blockId, fieldConfig, cmsBlockVersionId, createdAt, updatedAt, translated, block);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CmsSlot {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    versionId: ").append(toIndentedString(versionId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    slot: ").append(toIndentedString(slot)).append("\n");
    sb.append("    locked: ").append(toIndentedString(locked)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    blockId: ").append(toIndentedString(blockId)).append("\n");
    sb.append("    fieldConfig: ").append(toIndentedString(fieldConfig)).append("\n");
    sb.append("    cmsBlockVersionId: ").append(toIndentedString(cmsBlockVersionId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    translated: ").append(toIndentedString(translated)).append("\n");
    sb.append("    block: ").append(toIndentedString(block)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

