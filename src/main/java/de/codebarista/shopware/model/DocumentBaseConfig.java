/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.time.OffsetDateTime;
import java.util.Objects;

/**
 * Added since version: 6.0.0.0
 */
@JsonPropertyOrder({
        DocumentBaseConfig.JSON_PROPERTY_ID,
        DocumentBaseConfig.JSON_PROPERTY_DOCUMENT_TYPE_ID,
        DocumentBaseConfig.JSON_PROPERTY_LOGO_ID,
        DocumentBaseConfig.JSON_PROPERTY_NAME,
        DocumentBaseConfig.JSON_PROPERTY_FILENAME_PREFIX,
        DocumentBaseConfig.JSON_PROPERTY_FILENAME_SUFFIX,
        DocumentBaseConfig.JSON_PROPERTY_GLOBAL,
        DocumentBaseConfig.JSON_PROPERTY_DOCUMENT_NUMBER,
        DocumentBaseConfig.JSON_PROPERTY_CONFIG,
        DocumentBaseConfig.JSON_PROPERTY_CREATED_AT,
        DocumentBaseConfig.JSON_PROPERTY_CUSTOM_FIELDS,
        DocumentBaseConfig.JSON_PROPERTY_UPDATED_AT,
        DocumentBaseConfig.JSON_PROPERTY_LOGO
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class DocumentBaseConfig {
    public static final String JSON_PROPERTY_ID = "id";
    private String id;

    public static final String JSON_PROPERTY_DOCUMENT_TYPE_ID = "documentTypeId";
    private String documentTypeId;

    public static final String JSON_PROPERTY_LOGO_ID = "logoId";
    private String logoId;

    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_FILENAME_PREFIX = "filenamePrefix";
    private String filenamePrefix;

    public static final String JSON_PROPERTY_FILENAME_SUFFIX = "filenameSuffix";
    private String filenameSuffix;

    public static final String JSON_PROPERTY_GLOBAL = "global";
    private Boolean global;

    public static final String JSON_PROPERTY_DOCUMENT_NUMBER = "documentNumber";
    private String documentNumber;

    public static final String JSON_PROPERTY_CONFIG = "config";
    private DocumentConfig config;

    public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
    private OffsetDateTime createdAt;

    public static final String JSON_PROPERTY_CUSTOM_FIELDS = "customFields";
    private Object customFields;

    public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
    private OffsetDateTime updatedAt;

    public static final String JSON_PROPERTY_LOGO = "logo";
    private Media logo;

    public DocumentBaseConfig() {
    }

    @JsonCreator
    public DocumentBaseConfig(
            @JsonProperty(JSON_PROPERTY_CREATED_AT) OffsetDateTime createdAt,
            @JsonProperty(JSON_PROPERTY_UPDATED_AT) OffsetDateTime updatedAt
    ) {
        this();
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    public DocumentBaseConfig id(String id) {

        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getId() {
        return id;
    }


    @JsonProperty(JSON_PROPERTY_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setId(String id) {
        this.id = id;
    }


    public DocumentBaseConfig documentTypeId(String documentTypeId) {

        this.documentTypeId = documentTypeId;
        return this;
    }

    /**
     * Get documentTypeId
     *
     * @return documentTypeId
     **/
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_DOCUMENT_TYPE_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getDocumentTypeId() {
        return documentTypeId;
    }


    @JsonProperty(JSON_PROPERTY_DOCUMENT_TYPE_ID)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setDocumentTypeId(String documentTypeId) {
        this.documentTypeId = documentTypeId;
    }


    public DocumentBaseConfig logoId(String logoId) {

        this.logoId = logoId;
        return this;
    }

    /**
     * Get logoId
     *
     * @return logoId
     **/
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_LOGO_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getLogoId() {
        return logoId;
    }


    @JsonProperty(JSON_PROPERTY_LOGO_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLogoId(String logoId) {
        this.logoId = logoId;
    }


    public DocumentBaseConfig name(String name) {

        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getName() {
        return name;
    }


    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setName(String name) {
        this.name = name;
    }


    public DocumentBaseConfig filenamePrefix(String filenamePrefix) {

        this.filenamePrefix = filenamePrefix;
        return this;
    }

    /**
     * Get filenamePrefix
     *
     * @return filenamePrefix
     **/
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_FILENAME_PREFIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getFilenamePrefix() {
        return filenamePrefix;
    }


    @JsonProperty(JSON_PROPERTY_FILENAME_PREFIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFilenamePrefix(String filenamePrefix) {
        this.filenamePrefix = filenamePrefix;
    }


    public DocumentBaseConfig filenameSuffix(String filenameSuffix) {

        this.filenameSuffix = filenameSuffix;
        return this;
    }

    /**
     * Get filenameSuffix
     *
     * @return filenameSuffix
     **/
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_FILENAME_SUFFIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getFilenameSuffix() {
        return filenameSuffix;
    }


    @JsonProperty(JSON_PROPERTY_FILENAME_SUFFIX)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setFilenameSuffix(String filenameSuffix) {
        this.filenameSuffix = filenameSuffix;
    }


    public DocumentBaseConfig global(Boolean global) {

        this.global = global;
        return this;
    }

    /**
     * Get global
     *
     * @return global
     **/
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_GLOBAL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public Boolean getGlobal() {
        return global;
    }


    @JsonProperty(JSON_PROPERTY_GLOBAL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setGlobal(Boolean global) {
        this.global = global;
    }


    public DocumentBaseConfig documentNumber(String documentNumber) {

        this.documentNumber = documentNumber;
        return this;
    }

    /**
     * Get documentNumber
     *
     * @return documentNumber
     **/
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_DOCUMENT_NUMBER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDocumentNumber() {
        return documentNumber;
    }


    @JsonProperty(JSON_PROPERTY_DOCUMENT_NUMBER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDocumentNumber(String documentNumber) {
        this.documentNumber = documentNumber;
    }


    public DocumentBaseConfig config(DocumentConfig config) {

        this.config = config;
        return this;
    }

    /**
     * Get config
     *
     * @return config
     **/
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CONFIG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public DocumentConfig getConfig() {
        return config;
    }


    @JsonProperty(JSON_PROPERTY_CONFIG)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setConfig(DocumentConfig config) {
        this.config = config;
    }


    /**
     * Get createdAt
     *
     * @return createdAt
     **/
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_CREATED_AT)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }


    public DocumentBaseConfig customFields(Object customFields) {

        this.customFields = customFields;
        return this;
    }

    /**
     * Get customFields
     *
     * @return customFields
     **/
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Object getCustomFields() {
        return customFields;
    }


    @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCustomFields(Object customFields) {
        this.customFields = customFields;
    }


    /**
     * Get updatedAt
     *
     * @return updatedAt
     **/
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_UPDATED_AT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }


    public DocumentBaseConfig logo(Media logo) {

        this.logo = logo;
        return this;
    }

    /**
     * Get logo
     *
     * @return logo
     **/
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_LOGO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Media getLogo() {
        return logo;
    }


    @JsonProperty(JSON_PROPERTY_LOGO)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setLogo(Media logo) {
        this.logo = logo;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DocumentBaseConfig documentBaseConfig = (DocumentBaseConfig) o;
        return Objects.equals(this.id, documentBaseConfig.id) &&
                Objects.equals(this.documentTypeId, documentBaseConfig.documentTypeId) &&
                Objects.equals(this.logoId, documentBaseConfig.logoId) &&
                Objects.equals(this.name, documentBaseConfig.name) &&
                Objects.equals(this.filenamePrefix, documentBaseConfig.filenamePrefix) &&
                Objects.equals(this.filenameSuffix, documentBaseConfig.filenameSuffix) &&
                Objects.equals(this.global, documentBaseConfig.global) &&
                Objects.equals(this.documentNumber, documentBaseConfig.documentNumber) &&
                Objects.equals(this.config, documentBaseConfig.config) &&
                Objects.equals(this.createdAt, documentBaseConfig.createdAt) &&
                Objects.equals(this.customFields, documentBaseConfig.customFields) &&
                Objects.equals(this.updatedAt, documentBaseConfig.updatedAt) &&
                Objects.equals(this.logo, documentBaseConfig.logo);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, documentTypeId, logoId, name, filenamePrefix, filenameSuffix, global, documentNumber, config, createdAt, customFields, updatedAt, logo);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DocumentBaseConfig {\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    documentTypeId: ").append(toIndentedString(documentTypeId)).append("\n");
        sb.append("    logoId: ").append(toIndentedString(logoId)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    filenamePrefix: ").append(toIndentedString(filenamePrefix)).append("\n");
        sb.append("    filenameSuffix: ").append(toIndentedString(filenameSuffix)).append("\n");
        sb.append("    global: ").append(toIndentedString(global)).append("\n");
        sb.append("    documentNumber: ").append(toIndentedString(documentNumber)).append("\n");
        sb.append("    config: ").append(toIndentedString(config)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
        sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

