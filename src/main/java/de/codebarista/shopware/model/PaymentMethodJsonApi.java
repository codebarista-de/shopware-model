/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * Added since version: 6.0.0.0
 */
@JsonPropertyOrder({
  PaymentMethodJsonApi.JSON_PROPERTY_TYPE,
  PaymentMethodJsonApi.JSON_PROPERTY_ID,
  PaymentMethodJsonApi.JSON_PROPERTY_ATTRIBUTES,
  PaymentMethodJsonApi.JSON_PROPERTY_RELATIONSHIPS,
  PaymentMethodJsonApi.JSON_PROPERTY_LINKS,
  PaymentMethodJsonApi.JSON_PROPERTY_META,
  PaymentMethodJsonApi.JSON_PROPERTY_NAME,
  PaymentMethodJsonApi.JSON_PROPERTY_DISTINGUISHABLE_NAME,
  PaymentMethodJsonApi.JSON_PROPERTY_DESCRIPTION,
  PaymentMethodJsonApi.JSON_PROPERTY_POSITION,
  PaymentMethodJsonApi.JSON_PROPERTY_ACTIVE,
  PaymentMethodJsonApi.JSON_PROPERTY_AFTER_ORDER_ENABLED,
  PaymentMethodJsonApi.JSON_PROPERTY_CUSTOM_FIELDS,
  PaymentMethodJsonApi.JSON_PROPERTY_MEDIA_ID,
  PaymentMethodJsonApi.JSON_PROPERTY_SYNCHRONOUS,
  PaymentMethodJsonApi.JSON_PROPERTY_ASYNCHRONOUS,
  PaymentMethodJsonApi.JSON_PROPERTY_PREPARED,
  PaymentMethodJsonApi.JSON_PROPERTY_REFUNDABLE,
  PaymentMethodJsonApi.JSON_PROPERTY_RECURRING,
  PaymentMethodJsonApi.JSON_PROPERTY_SHORT_NAME,
  PaymentMethodJsonApi.JSON_PROPERTY_TECHNICAL_NAME,
  PaymentMethodJsonApi.JSON_PROPERTY_CREATED_AT,
  PaymentMethodJsonApi.JSON_PROPERTY_UPDATED_AT,
  PaymentMethodJsonApi.JSON_PROPERTY_TRANSLATED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class PaymentMethodJsonApi {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private Map<String, Object> attributes = new HashMap<>();

  public static final String JSON_PROPERTY_RELATIONSHIPS = "relationships";
  private PaymentMethodJsonApiAllOfRelationships relationships;

  public static final String JSON_PROPERTY_LINKS = "links";
  private Map<String, Link> links = new HashMap<>();

  public static final String JSON_PROPERTY_META = "meta";
  private Map<String, Object> meta = new HashMap<>();

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_DISTINGUISHABLE_NAME = "distinguishableName";
  private String distinguishableName;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_POSITION = "position";
  private Long position;

  public static final String JSON_PROPERTY_ACTIVE = "active";
  private Boolean active;

  public static final String JSON_PROPERTY_AFTER_ORDER_ENABLED = "afterOrderEnabled";
  private Boolean afterOrderEnabled;

  public static final String JSON_PROPERTY_CUSTOM_FIELDS = "customFields";
  private Object customFields;

  public static final String JSON_PROPERTY_MEDIA_ID = "mediaId";
  private String mediaId;

  public static final String JSON_PROPERTY_SYNCHRONOUS = "synchronous";
  private Boolean synchronous;

  public static final String JSON_PROPERTY_ASYNCHRONOUS = "asynchronous";
  private Boolean asynchronous;

  public static final String JSON_PROPERTY_PREPARED = "prepared";
  private Boolean prepared;

  public static final String JSON_PROPERTY_REFUNDABLE = "refundable";
  private Boolean refundable;

  public static final String JSON_PROPERTY_RECURRING = "recurring";
  private Boolean recurring;

  public static final String JSON_PROPERTY_SHORT_NAME = "shortName";
  private String shortName;

  public static final String JSON_PROPERTY_TECHNICAL_NAME = "technicalName";
  private String technicalName;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_TRANSLATED = "translated";
  private Object translated;

  public PaymentMethodJsonApi() {
  }

  @JsonCreator
  public PaymentMethodJsonApi(
    @JsonProperty(JSON_PROPERTY_DISTINGUISHABLE_NAME) String distinguishableName, 
    @JsonProperty(JSON_PROPERTY_SYNCHRONOUS) Boolean synchronous, 
    @JsonProperty(JSON_PROPERTY_ASYNCHRONOUS) Boolean asynchronous, 
    @JsonProperty(JSON_PROPERTY_PREPARED) Boolean prepared, 
    @JsonProperty(JSON_PROPERTY_REFUNDABLE) Boolean refundable, 
    @JsonProperty(JSON_PROPERTY_RECURRING) Boolean recurring, 
    @JsonProperty(JSON_PROPERTY_CREATED_AT) OffsetDateTime createdAt, 
    @JsonProperty(JSON_PROPERTY_UPDATED_AT) OffsetDateTime updatedAt
  ) {
    this();
    this.distinguishableName = distinguishableName;
    this.synchronous = synchronous;
    this.asynchronous = asynchronous;
    this.prepared = prepared;
    this.refundable = refundable;
    this.recurring = recurring;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }

  public PaymentMethodJsonApi type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public PaymentMethodJsonApi id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public PaymentMethodJsonApi attributes(Map<String, Object> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public PaymentMethodJsonApi putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Members of the attributes object (\&quot;attributes\&quot;) represent information about the resource object in which it&#39;s defined.
   * @return attributes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public PaymentMethodJsonApi relationships(PaymentMethodJsonApiAllOfRelationships relationships) {
    
    this.relationships = relationships;
    return this;
  }

   /**
   * Get relationships
   * @return relationships
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentMethodJsonApiAllOfRelationships getRelationships() {
    return relationships;
  }


  @JsonProperty(JSON_PROPERTY_RELATIONSHIPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRelationships(PaymentMethodJsonApiAllOfRelationships relationships) {
    this.relationships = relationships;
  }


  public PaymentMethodJsonApi links(Map<String, Link> links) {
    
    this.links = links;
    return this;
  }

  public PaymentMethodJsonApi putLinksItem(String key, Link linksItem) {
    if (this.links == null) {
      this.links = new HashMap<>();
    }
    this.links.put(key, linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Link> getLinks() {
    return links;
  }


  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinks(Map<String, Link> links) {
    this.links = links;
  }


  public PaymentMethodJsonApi meta(Map<String, Object> meta) {
    
    this.meta = meta;
    return this;
  }

  public PaymentMethodJsonApi putMetaItem(String key, Object metaItem) {
    if (this.meta == null) {
      this.meta = new HashMap<>();
    }
    this.meta.put(key, metaItem);
    return this;
  }

   /**
   * Non-standard meta-information that can not be represented as an attribute or relationship.
   * @return meta
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_META)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, Object> getMeta() {
    return meta;
  }


  @JsonProperty(JSON_PROPERTY_META)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setMeta(Map<String, Object> meta) {
    this.meta = meta;
  }


  public PaymentMethodJsonApi name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


   /**
   * Get distinguishableName
   * @return distinguishableName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISTINGUISHABLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDistinguishableName() {
    return distinguishableName;
  }




  public PaymentMethodJsonApi description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public PaymentMethodJsonApi position(Long position) {
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getPosition() {
    return position;
  }


  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPosition(Long position) {
    this.position = position;
  }


  public PaymentMethodJsonApi active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActive() {
    return active;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActive(Boolean active) {
    this.active = active;
  }


  public PaymentMethodJsonApi afterOrderEnabled(Boolean afterOrderEnabled) {
    
    this.afterOrderEnabled = afterOrderEnabled;
    return this;
  }

   /**
   * Get afterOrderEnabled
   * @return afterOrderEnabled
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AFTER_ORDER_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAfterOrderEnabled() {
    return afterOrderEnabled;
  }


  @JsonProperty(JSON_PROPERTY_AFTER_ORDER_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAfterOrderEnabled(Boolean afterOrderEnabled) {
    this.afterOrderEnabled = afterOrderEnabled;
  }


  public PaymentMethodJsonApi customFields(Object customFields) {
    
    this.customFields = customFields;
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getCustomFields() {
    return customFields;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


  public PaymentMethodJsonApi mediaId(String mediaId) {
    
    this.mediaId = mediaId;
    return this;
  }

   /**
   * Get mediaId
   * @return mediaId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEDIA_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMediaId() {
    return mediaId;
  }


  @JsonProperty(JSON_PROPERTY_MEDIA_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMediaId(String mediaId) {
    this.mediaId = mediaId;
  }


   /**
   * Runtime field, cannot be used as part of the criteria.
   * @return synchronous
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SYNCHRONOUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSynchronous() {
    return synchronous;
  }




   /**
   * Runtime field, cannot be used as part of the criteria.
   * @return asynchronous
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASYNCHRONOUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAsynchronous() {
    return asynchronous;
  }




   /**
   * Runtime field, cannot be used as part of the criteria.
   * @return prepared
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PREPARED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPrepared() {
    return prepared;
  }




   /**
   * Runtime field, cannot be used as part of the criteria.
   * @return refundable
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REFUNDABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRefundable() {
    return refundable;
  }




   /**
   * Runtime field, cannot be used as part of the criteria.
   * @return recurring
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RECURRING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getRecurring() {
    return recurring;
  }




  public PaymentMethodJsonApi shortName(String shortName) {
    
    this.shortName = shortName;
    return this;
  }

   /**
   * Runtime field, cannot be used as part of the criteria.
   * @return shortName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShortName() {
    return shortName;
  }


  @JsonProperty(JSON_PROPERTY_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShortName(String shortName) {
    this.shortName = shortName;
  }


  public PaymentMethodJsonApi technicalName(String technicalName) {
    
    this.technicalName = technicalName;
    return this;
  }

   /**
   * Get technicalName
   * @return technicalName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TECHNICAL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTechnicalName() {
    return technicalName;
  }


  @JsonProperty(JSON_PROPERTY_TECHNICAL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTechnicalName(String technicalName) {
    this.technicalName = technicalName;
  }


   /**
   * Get createdAt
   * @return createdAt
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }




  public PaymentMethodJsonApi translated(Object translated) {
    
    this.translated = translated;
    return this;
  }

   /**
   * Get translated
   * @return translated
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSLATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getTranslated() {
    return translated;
  }


  @JsonProperty(JSON_PROPERTY_TRANSLATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTranslated(Object translated) {
    this.translated = translated;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentMethodJsonApi paymentMethodJsonApi = (PaymentMethodJsonApi) o;
    return Objects.equals(this.type, paymentMethodJsonApi.type) &&
        Objects.equals(this.id, paymentMethodJsonApi.id) &&
        Objects.equals(this.attributes, paymentMethodJsonApi.attributes) &&
        Objects.equals(this.relationships, paymentMethodJsonApi.relationships) &&
        Objects.equals(this.links, paymentMethodJsonApi.links) &&
        Objects.equals(this.meta, paymentMethodJsonApi.meta) &&
        Objects.equals(this.name, paymentMethodJsonApi.name) &&
        Objects.equals(this.distinguishableName, paymentMethodJsonApi.distinguishableName) &&
        Objects.equals(this.description, paymentMethodJsonApi.description) &&
        Objects.equals(this.position, paymentMethodJsonApi.position) &&
        Objects.equals(this.active, paymentMethodJsonApi.active) &&
        Objects.equals(this.afterOrderEnabled, paymentMethodJsonApi.afterOrderEnabled) &&
        Objects.equals(this.customFields, paymentMethodJsonApi.customFields) &&
        Objects.equals(this.mediaId, paymentMethodJsonApi.mediaId) &&
        Objects.equals(this.synchronous, paymentMethodJsonApi.synchronous) &&
        Objects.equals(this.asynchronous, paymentMethodJsonApi.asynchronous) &&
        Objects.equals(this.prepared, paymentMethodJsonApi.prepared) &&
        Objects.equals(this.refundable, paymentMethodJsonApi.refundable) &&
        Objects.equals(this.recurring, paymentMethodJsonApi.recurring) &&
        Objects.equals(this.shortName, paymentMethodJsonApi.shortName) &&
        Objects.equals(this.technicalName, paymentMethodJsonApi.technicalName) &&
        Objects.equals(this.createdAt, paymentMethodJsonApi.createdAt) &&
        Objects.equals(this.updatedAt, paymentMethodJsonApi.updatedAt) &&
        Objects.equals(this.translated, paymentMethodJsonApi.translated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, id, attributes, relationships, links, meta, name, distinguishableName, description, position, active, afterOrderEnabled, customFields, mediaId, synchronous, asynchronous, prepared, refundable, recurring, shortName, technicalName, createdAt, updatedAt, translated);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentMethodJsonApi {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    relationships: ").append(toIndentedString(relationships)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    distinguishableName: ").append(toIndentedString(distinguishableName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    afterOrderEnabled: ").append(toIndentedString(afterOrderEnabled)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    mediaId: ").append(toIndentedString(mediaId)).append("\n");
    sb.append("    synchronous: ").append(toIndentedString(synchronous)).append("\n");
    sb.append("    asynchronous: ").append(toIndentedString(asynchronous)).append("\n");
    sb.append("    prepared: ").append(toIndentedString(prepared)).append("\n");
    sb.append("    refundable: ").append(toIndentedString(refundable)).append("\n");
    sb.append("    recurring: ").append(toIndentedString(recurring)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    technicalName: ").append(toIndentedString(technicalName)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    translated: ").append(toIndentedString(translated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

