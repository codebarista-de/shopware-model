/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.math.BigDecimal;
import java.util.List;
import java.util.Objects;


/**
 * OrderPrice
 */
@JsonPropertyOrder({
        OrderPrice.JSON_PROPERTY_NET_PRICE,
        OrderPrice.JSON_PROPERTY_TOTAL_PRICE,
        OrderPrice.JSON_PROPERTY_CALCULATED_TAXES,
        OrderPrice.JSON_PROPERTY_TAX_RULES,
        OrderPrice.JSON_PROPERTY_POSITION_PRICE,
        OrderPrice.JSON_PROPERTY_RAW_TOTAL,
        OrderPrice.JSON_PROPERTY_TAX_STATUS
})
@JsonTypeName("Order_price")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class OrderPrice {
    public static final String JSON_PROPERTY_NET_PRICE = "netPrice";
    private BigDecimal netPrice;

    public static final String JSON_PROPERTY_TOTAL_PRICE = "totalPrice";
    private BigDecimal totalPrice;

    public static final String JSON_PROPERTY_CALCULATED_TAXES = "calculatedTaxes";
    private List<CalculatedTax> calculatedTaxes;

    public static final String JSON_PROPERTY_TAX_RULES = "taxRules";
    private Object taxRules;

    public static final String JSON_PROPERTY_POSITION_PRICE = "positionPrice";
    private BigDecimal positionPrice;

    public static final String JSON_PROPERTY_RAW_TOTAL = "rawTotal";
    private BigDecimal rawTotal;

    public static final String JSON_PROPERTY_TAX_STATUS = "taxStatus";
    private String taxStatus;

    public OrderPrice() {
    }

    public OrderPrice netPrice(BigDecimal netPrice) {

        this.netPrice = netPrice;
        return this;
    }

    /**
     * Get netPrice
     *
     * @return netPrice
     **/
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_NET_PRICE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public BigDecimal getNetPrice() {
        return netPrice;
    }


    @JsonProperty(JSON_PROPERTY_NET_PRICE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setNetPrice(BigDecimal netPrice) {
        this.netPrice = netPrice;
    }


    public OrderPrice totalPrice(BigDecimal totalPrice) {

        this.totalPrice = totalPrice;
        return this;
    }

    /**
     * Get totalPrice
     *
     * @return totalPrice
     **/
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_TOTAL_PRICE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public BigDecimal getTotalPrice() {
        return totalPrice;
    }


    @JsonProperty(JSON_PROPERTY_TOTAL_PRICE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTotalPrice(BigDecimal totalPrice) {
        this.totalPrice = totalPrice;
    }


    public OrderPrice calculatedTaxes(List<CalculatedTax> calculatedTaxes) {

        this.calculatedTaxes = calculatedTaxes;
        return this;
    }

    /**
     * Get calculatedTaxes
     *
     * @return calculatedTaxes
     **/
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CALCULATED_TAXES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<CalculatedTax> getCalculatedTaxes() {
        return calculatedTaxes;
    }


    @JsonProperty(JSON_PROPERTY_CALCULATED_TAXES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCalculatedTaxes(List<CalculatedTax> calculatedTaxes) {
        this.calculatedTaxes = calculatedTaxes;
    }


    public OrderPrice taxRules(Object taxRules) {

        this.taxRules = taxRules;
        return this;
    }

    /**
     * Get taxRules
     *
     * @return taxRules
     **/
    @jakarta.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TAX_RULES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Object getTaxRules() {
        return taxRules;
    }


    @JsonProperty(JSON_PROPERTY_TAX_RULES)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTaxRules(Object taxRules) {
        this.taxRules = taxRules;
    }


    public OrderPrice positionPrice(BigDecimal positionPrice) {

        this.positionPrice = positionPrice;
        return this;
    }

    /**
     * Get positionPrice
     *
     * @return positionPrice
     **/
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_POSITION_PRICE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public BigDecimal getPositionPrice() {
        return positionPrice;
    }


    @JsonProperty(JSON_PROPERTY_POSITION_PRICE)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setPositionPrice(BigDecimal positionPrice) {
        this.positionPrice = positionPrice;
    }


    public OrderPrice rawTotal(BigDecimal rawTotal) {

        this.rawTotal = rawTotal;
        return this;
    }

    /**
     * Get rawTotal
     *
     * @return rawTotal
     **/
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_RAW_TOTAL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public BigDecimal getRawTotal() {
        return rawTotal;
    }


    @JsonProperty(JSON_PROPERTY_RAW_TOTAL)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setRawTotal(BigDecimal rawTotal) {
        this.rawTotal = rawTotal;
    }


    public OrderPrice taxStatus(String taxStatus) {

        this.taxStatus = taxStatus;
        return this;
    }

    /**
     * Get taxStatus
     *
     * @return taxStatus
     **/
    @jakarta.annotation.Nonnull
    @JsonProperty(JSON_PROPERTY_TAX_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)

    public String getTaxStatus() {
        return taxStatus;
    }


    @JsonProperty(JSON_PROPERTY_TAX_STATUS)
    @JsonInclude(value = JsonInclude.Include.ALWAYS)
    public void setTaxStatus(String taxStatus) {
        this.taxStatus = taxStatus;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OrderPrice orderPrice = (OrderPrice) o;
        return Objects.equals(this.netPrice, orderPrice.netPrice) &&
                Objects.equals(this.totalPrice, orderPrice.totalPrice) &&
                Objects.equals(this.calculatedTaxes, orderPrice.calculatedTaxes) &&
                Objects.equals(this.taxRules, orderPrice.taxRules) &&
                Objects.equals(this.positionPrice, orderPrice.positionPrice) &&
                Objects.equals(this.rawTotal, orderPrice.rawTotal) &&
                Objects.equals(this.taxStatus, orderPrice.taxStatus);
    }

    @Override
    public int hashCode() {
        return Objects.hash(netPrice, totalPrice, calculatedTaxes, taxRules, positionPrice, rawTotal, taxStatus);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OrderPrice {\n");
        sb.append("    netPrice: ").append(toIndentedString(netPrice)).append("\n");
        sb.append("    totalPrice: ").append(toIndentedString(totalPrice)).append("\n");
        sb.append("    calculatedTaxes: ").append(toIndentedString(calculatedTaxes)).append("\n");
        sb.append("    taxRules: ").append(toIndentedString(taxRules)).append("\n");
        sb.append("    positionPrice: ").append(toIndentedString(positionPrice)).append("\n");
        sb.append("    rawTotal: ").append(toIndentedString(rawTotal)).append("\n");
        sb.append("    taxStatus: ").append(toIndentedString(taxStatus)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
