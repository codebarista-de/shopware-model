/*
 * Shopware Store API
 * This endpoint reference contains an overview of all endpoints comprising the Shopware Store API
 *
 * The version of the OpenAPI document: 6.5.7.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.codebarista.shopware.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import java.time.OffsetDateTime;
import java.util.Objects;

/**
 * Added since version: 6.0.0.0
 */
@JsonPropertyOrder({
  Currency.JSON_PROPERTY_ID,
  Currency.JSON_PROPERTY_FACTOR,
  Currency.JSON_PROPERTY_SYMBOL,
  Currency.JSON_PROPERTY_ISO_CODE,
  Currency.JSON_PROPERTY_SHORT_NAME,
  Currency.JSON_PROPERTY_NAME,
  Currency.JSON_PROPERTY_POSITION,
  Currency.JSON_PROPERTY_IS_SYSTEM_DEFAULT,
  Currency.JSON_PROPERTY_TAX_FREE_FROM,
  Currency.JSON_PROPERTY_CUSTOM_FIELDS,
  Currency.JSON_PROPERTY_ITEM_ROUNDING,
  Currency.JSON_PROPERTY_TOTAL_ROUNDING,
  Currency.JSON_PROPERTY_CREATED_AT,
  Currency.JSON_PROPERTY_UPDATED_AT,
  Currency.JSON_PROPERTY_TRANSLATED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-10T11:26:02.541008353+02:00[Europe/Berlin]", comments = "Generator version: 7.5.0")
public class Currency {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_FACTOR = "factor";
  private Float factor;

  public static final String JSON_PROPERTY_SYMBOL = "symbol";
  private String symbol;

  public static final String JSON_PROPERTY_ISO_CODE = "isoCode";
  private String isoCode;

  public static final String JSON_PROPERTY_SHORT_NAME = "shortName";
  private String shortName;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_POSITION = "position";
  private Long position;

  public static final String JSON_PROPERTY_IS_SYSTEM_DEFAULT = "isSystemDefault";
  private Boolean isSystemDefault;

  public static final String JSON_PROPERTY_TAX_FREE_FROM = "taxFreeFrom";
  private Float taxFreeFrom;

  public static final String JSON_PROPERTY_CUSTOM_FIELDS = "customFields";
  private Object customFields;

  public static final String JSON_PROPERTY_ITEM_ROUNDING = "itemRounding";
  private CurrencyJsonApiAllOfItemRounding itemRounding;

  public static final String JSON_PROPERTY_TOTAL_ROUNDING = "totalRounding";
  private CurrencyJsonApiAllOfItemRounding totalRounding;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_TRANSLATED = "translated";
  private Object translated;

  public Currency() {
  }

  @JsonCreator
  public Currency(
    @JsonProperty(JSON_PROPERTY_CREATED_AT) OffsetDateTime createdAt, 
    @JsonProperty(JSON_PROPERTY_UPDATED_AT) OffsetDateTime updatedAt
  ) {
    this();
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }

  public Currency id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public Currency factor(Float factor) {
    
    this.factor = factor;
    return this;
  }

   /**
   * Get factor
   * @return factor
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FACTOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Float getFactor() {
    return factor;
  }


  @JsonProperty(JSON_PROPERTY_FACTOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFactor(Float factor) {
    this.factor = factor;
  }


  public Currency symbol(String symbol) {
    
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSymbol() {
    return symbol;
  }


  @JsonProperty(JSON_PROPERTY_SYMBOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }


  public Currency isoCode(String isoCode) {
    
    this.isoCode = isoCode;
    return this;
  }

   /**
   * Get isoCode
   * @return isoCode
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ISO_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIsoCode() {
    return isoCode;
  }


  @JsonProperty(JSON_PROPERTY_ISO_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsoCode(String isoCode) {
    this.isoCode = isoCode;
  }


  public Currency shortName(String shortName) {
    
    this.shortName = shortName;
    return this;
  }

   /**
   * Get shortName
   * @return shortName
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getShortName() {
    return shortName;
  }


  @JsonProperty(JSON_PROPERTY_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShortName(String shortName) {
    this.shortName = shortName;
  }


  public Currency name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public Currency position(Long position) {
    
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getPosition() {
    return position;
  }


  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPosition(Long position) {
    this.position = position;
  }


  public Currency isSystemDefault(Boolean isSystemDefault) {
    
    this.isSystemDefault = isSystemDefault;
    return this;
  }

   /**
   * Runtime field, cannot be used as part of the criteria.
   * @return isSystemDefault
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_SYSTEM_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsSystemDefault() {
    return isSystemDefault;
  }


  @JsonProperty(JSON_PROPERTY_IS_SYSTEM_DEFAULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsSystemDefault(Boolean isSystemDefault) {
    this.isSystemDefault = isSystemDefault;
  }


  public Currency taxFreeFrom(Float taxFreeFrom) {
    
    this.taxFreeFrom = taxFreeFrom;
    return this;
  }

   /**
   * Get taxFreeFrom
   * @return taxFreeFrom
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAX_FREE_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getTaxFreeFrom() {
    return taxFreeFrom;
  }


  @JsonProperty(JSON_PROPERTY_TAX_FREE_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxFreeFrom(Float taxFreeFrom) {
    this.taxFreeFrom = taxFreeFrom;
  }


  public Currency customFields(Object customFields) {
    
    this.customFields = customFields;
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getCustomFields() {
    return customFields;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomFields(Object customFields) {
    this.customFields = customFields;
  }


  public Currency itemRounding(CurrencyJsonApiAllOfItemRounding itemRounding) {
    
    this.itemRounding = itemRounding;
    return this;
  }

   /**
   * Get itemRounding
   * @return itemRounding
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ITEM_ROUNDING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CurrencyJsonApiAllOfItemRounding getItemRounding() {
    return itemRounding;
  }


  @JsonProperty(JSON_PROPERTY_ITEM_ROUNDING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setItemRounding(CurrencyJsonApiAllOfItemRounding itemRounding) {
    this.itemRounding = itemRounding;
  }


  public Currency totalRounding(CurrencyJsonApiAllOfItemRounding totalRounding) {
    
    this.totalRounding = totalRounding;
    return this;
  }

   /**
   * Get totalRounding
   * @return totalRounding
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_ROUNDING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CurrencyJsonApiAllOfItemRounding getTotalRounding() {
    return totalRounding;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_ROUNDING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalRounding(CurrencyJsonApiAllOfItemRounding totalRounding) {
    this.totalRounding = totalRounding;
  }


   /**
   * Get createdAt
   * @return createdAt
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }




  public Currency translated(Object translated) {
    
    this.translated = translated;
    return this;
  }

   /**
   * Get translated
   * @return translated
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSLATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getTranslated() {
    return translated;
  }


  @JsonProperty(JSON_PROPERTY_TRANSLATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTranslated(Object translated) {
    this.translated = translated;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Currency currency = (Currency) o;
    return Objects.equals(this.id, currency.id) &&
        Objects.equals(this.factor, currency.factor) &&
        Objects.equals(this.symbol, currency.symbol) &&
        Objects.equals(this.isoCode, currency.isoCode) &&
        Objects.equals(this.shortName, currency.shortName) &&
        Objects.equals(this.name, currency.name) &&
        Objects.equals(this.position, currency.position) &&
        Objects.equals(this.isSystemDefault, currency.isSystemDefault) &&
        Objects.equals(this.taxFreeFrom, currency.taxFreeFrom) &&
        Objects.equals(this.customFields, currency.customFields) &&
        Objects.equals(this.itemRounding, currency.itemRounding) &&
        Objects.equals(this.totalRounding, currency.totalRounding) &&
        Objects.equals(this.createdAt, currency.createdAt) &&
        Objects.equals(this.updatedAt, currency.updatedAt) &&
        Objects.equals(this.translated, currency.translated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, factor, symbol, isoCode, shortName, name, position, isSystemDefault, taxFreeFrom, customFields, itemRounding, totalRounding, createdAt, updatedAt, translated);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Currency {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    factor: ").append(toIndentedString(factor)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    isoCode: ").append(toIndentedString(isoCode)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    isSystemDefault: ").append(toIndentedString(isSystemDefault)).append("\n");
    sb.append("    taxFreeFrom: ").append(toIndentedString(taxFreeFrom)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    itemRounding: ").append(toIndentedString(itemRounding)).append("\n");
    sb.append("    totalRounding: ").append(toIndentedString(totalRounding)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    translated: ").append(toIndentedString(translated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

